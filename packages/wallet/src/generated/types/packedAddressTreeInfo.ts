/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
  getU8Decoder,
  getU8Encoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from "gill";

export type PackedAddressTreeInfo = {
  addressMerkleTreePubkeyIndex: number;
  addressQueuePubkeyIndex: number;
  rootIndex: number;
};

export type PackedAddressTreeInfoArgs = PackedAddressTreeInfo;

export function getPackedAddressTreeInfoEncoder(): FixedSizeEncoder<PackedAddressTreeInfoArgs> {
  return getStructEncoder([
    ["addressMerkleTreePubkeyIndex", getU8Encoder()],
    ["addressQueuePubkeyIndex", getU8Encoder()],
    ["rootIndex", getU16Encoder()],
  ]);
}

export function getPackedAddressTreeInfoDecoder(): FixedSizeDecoder<PackedAddressTreeInfo> {
  return getStructDecoder([
    ["addressMerkleTreePubkeyIndex", getU8Decoder()],
    ["addressQueuePubkeyIndex", getU8Decoder()],
    ["rootIndex", getU16Decoder()],
  ]);
}

export function getPackedAddressTreeInfoCodec(): FixedSizeCodec<
  PackedAddressTreeInfoArgs,
  PackedAddressTreeInfo
> {
  return combineCodec(
    getPackedAddressTreeInfoEncoder(),
    getPackedAddressTreeInfoDecoder()
  );
}
