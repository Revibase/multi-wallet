/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getAddressDecoder,
  getAddressEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
  type ReadonlyUint8Array,
} from '@solana/kit';
import {
  getCompressedAccountDataDecoder,
  getCompressedAccountDataEncoder,
  type CompressedAccountData,
  type CompressedAccountDataArgs,
} from '.';

export type CompressedAccount = {
  owner: Address;
  lamports: bigint;
  address: Option<ReadonlyUint8Array>;
  data: Option<CompressedAccountData>;
};

export type CompressedAccountArgs = {
  owner: Address;
  lamports: number | bigint;
  address: OptionOrNullable<ReadonlyUint8Array>;
  data: OptionOrNullable<CompressedAccountDataArgs>;
};

export function getCompressedAccountEncoder(): Encoder<CompressedAccountArgs> {
  return getStructEncoder([
    ['owner', getAddressEncoder()],
    ['lamports', getU64Encoder()],
    ['address', getOptionEncoder(fixEncoderSize(getBytesEncoder(), 32))],
    ['data', getOptionEncoder(getCompressedAccountDataEncoder())],
  ]);
}

export function getCompressedAccountDecoder(): Decoder<CompressedAccount> {
  return getStructDecoder([
    ['owner', getAddressDecoder()],
    ['lamports', getU64Decoder()],
    ['address', getOptionDecoder(fixDecoderSize(getBytesDecoder(), 32))],
    ['data', getOptionDecoder(getCompressedAccountDataDecoder())],
  ]);
}

export function getCompressedAccountCodec(): Codec<
  CompressedAccountArgs,
  CompressedAccount
> {
  return combineCodec(
    getCompressedAccountEncoder(),
    getCompressedAccountDecoder()
  );
}
