/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU128Decoder,
  getU128Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from "gill";
import {
  getMemberKeyDecoder,
  getMemberKeyEncoder,
  type MemberKey,
  type MemberKeyArgs,
} from ".";

export type Delegate = {
  member: MemberKey;
  domainConfig: Option<Address>;
  isPermanentMember: boolean;
  settingsIndex: Option<bigint>;
};

export type DelegateArgs = {
  member: MemberKeyArgs;
  domainConfig: OptionOrNullable<Address>;
  isPermanentMember: boolean;
  settingsIndex: OptionOrNullable<number | bigint>;
};

export function getDelegateEncoder(): Encoder<DelegateArgs> {
  return getStructEncoder([
    ["member", getMemberKeyEncoder()],
    ["domainConfig", getOptionEncoder(getAddressEncoder())],
    ["isPermanentMember", getBooleanEncoder()],
    ["settingsIndex", getOptionEncoder(getU128Encoder())],
  ]);
}

export function getDelegateDecoder(): Decoder<Delegate> {
  return getStructDecoder([
    ["member", getMemberKeyDecoder()],
    ["domainConfig", getOptionDecoder(getAddressDecoder())],
    ["isPermanentMember", getBooleanDecoder()],
    ["settingsIndex", getOptionDecoder(getU128Decoder())],
  ]);
}

export function getDelegateCodec(): Codec<DelegateArgs, Delegate> {
  return combineCodec(getDelegateEncoder(), getDelegateDecoder());
}
