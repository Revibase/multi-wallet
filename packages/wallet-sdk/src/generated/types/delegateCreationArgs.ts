/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from "gill";
import {
  getPackedAddressTreeInfoDecoder,
  getPackedAddressTreeInfoEncoder,
  type PackedAddressTreeInfo,
  type PackedAddressTreeInfoArgs,
} from ".";

export type DelegateCreationArgs = {
  addressTreeInfo: PackedAddressTreeInfo;
  outputStateTreeIndex: number;
};

export type DelegateCreationArgsArgs = {
  addressTreeInfo: PackedAddressTreeInfoArgs;
  outputStateTreeIndex: number;
};

export function getDelegateCreationArgsEncoder(): FixedSizeEncoder<DelegateCreationArgsArgs> {
  return getStructEncoder([
    ["addressTreeInfo", getPackedAddressTreeInfoEncoder()],
    ["outputStateTreeIndex", getU8Encoder()],
  ]);
}

export function getDelegateCreationArgsDecoder(): FixedSizeDecoder<DelegateCreationArgs> {
  return getStructDecoder([
    ["addressTreeInfo", getPackedAddressTreeInfoDecoder()],
    ["outputStateTreeIndex", getU8Decoder()],
  ]);
}

export function getDelegateCreationArgsCodec(): FixedSizeCodec<
  DelegateCreationArgsArgs,
  DelegateCreationArgs
> {
  return combineCodec(
    getDelegateCreationArgsEncoder(),
    getDelegateCreationArgsDecoder()
  );
}
