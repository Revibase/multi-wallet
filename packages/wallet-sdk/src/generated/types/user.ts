/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU128Decoder,
  getU128Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';
import {
  getMemberKeyDecoder,
  getMemberKeyEncoder,
  type MemberKey,
  type MemberKeyArgs,
} from '.';

export type User = {
  member: MemberKey;
  domainConfig: Option<Address>;
  isPermanentMember: boolean;
  settingsIndex: Option<bigint>;
};

export type UserArgs = {
  member: MemberKeyArgs;
  domainConfig: OptionOrNullable<Address>;
  isPermanentMember: boolean;
  settingsIndex: OptionOrNullable<number | bigint>;
};

export function getUserEncoder(): Encoder<UserArgs> {
  return getStructEncoder([
    ['member', getMemberKeyEncoder()],
    ['domainConfig', getOptionEncoder(getAddressEncoder())],
    ['isPermanentMember', getBooleanEncoder()],
    ['settingsIndex', getOptionEncoder(getU128Encoder())],
  ]);
}

export function getUserDecoder(): Decoder<User> {
  return getStructDecoder([
    ['member', getMemberKeyDecoder()],
    ['domainConfig', getOptionDecoder(getAddressDecoder())],
    ['isPermanentMember', getBooleanDecoder()],
    ['settingsIndex', getOptionDecoder(getU128Decoder())],
  ]);
}

export function getUserCodec(): Codec<UserArgs, User> {
  return combineCodec(getUserEncoder(), getUserDecoder());
}
