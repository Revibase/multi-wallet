/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type CompressedAccountData = {
  discriminator: ReadonlyUint8Array;
  data: ReadonlyUint8Array;
  dataHash: ReadonlyUint8Array;
};

export type CompressedAccountDataArgs = CompressedAccountData;

export function getCompressedAccountDataEncoder(): Encoder<CompressedAccountDataArgs> {
  return getStructEncoder([
    ['discriminator', fixEncoderSize(getBytesEncoder(), 8)],
    ['data', addEncoderSizePrefix(getBytesEncoder(), getU32Encoder())],
    ['dataHash', fixEncoderSize(getBytesEncoder(), 32)],
  ]);
}

export function getCompressedAccountDataDecoder(): Decoder<CompressedAccountData> {
  return getStructDecoder([
    ['discriminator', fixDecoderSize(getBytesDecoder(), 8)],
    ['data', addDecoderSizePrefix(getBytesDecoder(), getU32Decoder())],
    ['dataHash', fixDecoderSize(getBytesDecoder(), 32)],
  ]);
}

export function getCompressedAccountDataCodec(): Codec<
  CompressedAccountDataArgs,
  CompressedAccountData
> {
  return combineCodec(
    getCompressedAccountDataEncoder(),
    getCompressedAccountDataDecoder()
  );
}
