/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type MemberKey = { keyType: number; key: ReadonlyUint8Array };

export type MemberKeyArgs = MemberKey;

export function getMemberKeyEncoder(): Encoder<MemberKeyArgs> {
  return getStructEncoder([
    ['keyType', getU8Encoder()],
    ['key', fixEncoderSize(getBytesEncoder(), 33)],
  ]);
}

export function getMemberKeyDecoder(): Decoder<MemberKey> {
  return getStructDecoder([
    ['keyType', getU8Decoder()],
    ['key', fixDecoderSize(getBytesDecoder(), 33)],
  ]);
}

export function getMemberKeyCodec(): Codec<MemberKeyArgs, MemberKey> {
  return combineCodec(getMemberKeyEncoder(), getMemberKeyDecoder());
}
