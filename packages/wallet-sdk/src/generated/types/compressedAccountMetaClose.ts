/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/kit';
import {
  getPackedStateTreeInfoDecoder,
  getPackedStateTreeInfoEncoder,
  type PackedStateTreeInfo,
  type PackedStateTreeInfoArgs,
} from '.';

export type CompressedAccountMetaClose = {
  /** State Merkle tree context. */
  treeInfo: PackedStateTreeInfo;
  /** Address. */
  address: ReadonlyUint8Array;
};

export type CompressedAccountMetaCloseArgs = {
  /** State Merkle tree context. */
  treeInfo: PackedStateTreeInfoArgs;
  /** Address. */
  address: ReadonlyUint8Array;
};

export function getCompressedAccountMetaCloseEncoder(): Encoder<CompressedAccountMetaCloseArgs> {
  return getStructEncoder([
    ['treeInfo', getPackedStateTreeInfoEncoder()],
    ['address', fixEncoderSize(getBytesEncoder(), 32)],
  ]);
}

export function getCompressedAccountMetaCloseDecoder(): Decoder<CompressedAccountMetaClose> {
  return getStructDecoder([
    ['treeInfo', getPackedStateTreeInfoDecoder()],
    ['address', fixDecoderSize(getBytesDecoder(), 32)],
  ]);
}

export function getCompressedAccountMetaCloseCodec(): Codec<
  CompressedAccountMetaCloseArgs,
  CompressedAccountMetaClose
> {
  return combineCodec(
    getCompressedAccountMetaCloseEncoder(),
    getCompressedAccountMetaCloseDecoder()
  );
}
