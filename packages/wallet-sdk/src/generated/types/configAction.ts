/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getStructDecoder,
  getStructEncoder,
  getTupleDecoder,
  getTupleEncoder,
  getU8Decoder,
  getU8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type GetDiscriminatedUnionVariant,
  type GetDiscriminatedUnionVariantContent,
} from "gill";
import {
  getMemberKeyWithEditPermissionsArgsDecoder,
  getMemberKeyWithEditPermissionsArgsEncoder,
  getMemberKeyWithRemovePermissionsArgsDecoder,
  getMemberKeyWithRemovePermissionsArgsEncoder,
  getMemberWithAddPermissionsArgsDecoder,
  getMemberWithAddPermissionsArgsEncoder,
  type MemberKeyWithEditPermissionsArgs,
  type MemberKeyWithEditPermissionsArgsArgs,
  type MemberKeyWithRemovePermissionsArgs,
  type MemberKeyWithRemovePermissionsArgsArgs,
  type MemberWithAddPermissionsArgs,
  type MemberWithAddPermissionsArgsArgs,
} from ".";

export type ConfigAction =
  | {
      __kind: "EditPermissions";
      fields: readonly [Array<MemberKeyWithEditPermissionsArgs>];
    }
  | {
      __kind: "AddMembers";
      fields: readonly [Array<MemberWithAddPermissionsArgs>];
    }
  | {
      __kind: "RemoveMembers";
      fields: readonly [Array<MemberKeyWithRemovePermissionsArgs>];
    }
  | { __kind: "SetThreshold"; fields: readonly [number] };

export type ConfigActionArgs =
  | {
      __kind: "EditPermissions";
      fields: readonly [Array<MemberKeyWithEditPermissionsArgsArgs>];
    }
  | {
      __kind: "AddMembers";
      fields: readonly [Array<MemberWithAddPermissionsArgsArgs>];
    }
  | {
      __kind: "RemoveMembers";
      fields: readonly [Array<MemberKeyWithRemovePermissionsArgsArgs>];
    }
  | { __kind: "SetThreshold"; fields: readonly [number] };

export function getConfigActionEncoder(): Encoder<ConfigActionArgs> {
  return getDiscriminatedUnionEncoder([
    [
      "EditPermissions",
      getStructEncoder([
        [
          "fields",
          getTupleEncoder([
            getArrayEncoder(getMemberKeyWithEditPermissionsArgsEncoder()),
          ]),
        ],
      ]),
    ],
    [
      "AddMembers",
      getStructEncoder([
        [
          "fields",
          getTupleEncoder([
            getArrayEncoder(getMemberWithAddPermissionsArgsEncoder()),
          ]),
        ],
      ]),
    ],
    [
      "RemoveMembers",
      getStructEncoder([
        [
          "fields",
          getTupleEncoder([
            getArrayEncoder(getMemberKeyWithRemovePermissionsArgsEncoder()),
          ]),
        ],
      ]),
    ],
    [
      "SetThreshold",
      getStructEncoder([["fields", getTupleEncoder([getU8Encoder()])]]),
    ],
  ]);
}

export function getConfigActionDecoder(): Decoder<ConfigAction> {
  return getDiscriminatedUnionDecoder([
    [
      "EditPermissions",
      getStructDecoder([
        [
          "fields",
          getTupleDecoder([
            getArrayDecoder(getMemberKeyWithEditPermissionsArgsDecoder()),
          ]),
        ],
      ]),
    ],
    [
      "AddMembers",
      getStructDecoder([
        [
          "fields",
          getTupleDecoder([
            getArrayDecoder(getMemberWithAddPermissionsArgsDecoder()),
          ]),
        ],
      ]),
    ],
    [
      "RemoveMembers",
      getStructDecoder([
        [
          "fields",
          getTupleDecoder([
            getArrayDecoder(getMemberKeyWithRemovePermissionsArgsDecoder()),
          ]),
        ],
      ]),
    ],
    [
      "SetThreshold",
      getStructDecoder([["fields", getTupleDecoder([getU8Decoder()])]]),
    ],
  ]);
}

export function getConfigActionCodec(): Codec<ConfigActionArgs, ConfigAction> {
  return combineCodec(getConfigActionEncoder(), getConfigActionDecoder());
}

// Data Enum Helpers.
export function configAction(
  kind: "EditPermissions",
  data: GetDiscriminatedUnionVariantContent<
    ConfigActionArgs,
    "__kind",
    "EditPermissions"
  >["fields"]
): GetDiscriminatedUnionVariant<ConfigActionArgs, "__kind", "EditPermissions">;
export function configAction(
  kind: "AddMembers",
  data: GetDiscriminatedUnionVariantContent<
    ConfigActionArgs,
    "__kind",
    "AddMembers"
  >["fields"]
): GetDiscriminatedUnionVariant<ConfigActionArgs, "__kind", "AddMembers">;
export function configAction(
  kind: "RemoveMembers",
  data: GetDiscriminatedUnionVariantContent<
    ConfigActionArgs,
    "__kind",
    "RemoveMembers"
  >["fields"]
): GetDiscriminatedUnionVariant<ConfigActionArgs, "__kind", "RemoveMembers">;
export function configAction(
  kind: "SetThreshold",
  data: GetDiscriminatedUnionVariantContent<
    ConfigActionArgs,
    "__kind",
    "SetThreshold"
  >["fields"]
): GetDiscriminatedUnionVariant<ConfigActionArgs, "__kind", "SetThreshold">;
export function configAction<K extends ConfigActionArgs["__kind"], Data>(
  kind: K,
  data?: Data
) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isConfigAction<K extends ConfigAction["__kind"]>(
  kind: K,
  value: ConfigAction
): value is ConfigAction & { __kind: K } {
  return value.__kind === kind;
}
