/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getBooleanDecoder,
  getBooleanEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getU8Decoder,
  getU8Encoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from "gill";

export type PackedMerkleContext = {
  merkleTreePubkeyIndex: number;
  queuePubkeyIndex: number;
  leafIndex: number;
  proveByIndex: boolean;
};

export type PackedMerkleContextArgs = PackedMerkleContext;

export function getPackedMerkleContextEncoder(): FixedSizeEncoder<PackedMerkleContextArgs> {
  return getStructEncoder([
    ["merkleTreePubkeyIndex", getU8Encoder()],
    ["queuePubkeyIndex", getU8Encoder()],
    ["leafIndex", getU32Encoder()],
    ["proveByIndex", getBooleanEncoder()],
  ]);
}

export function getPackedMerkleContextDecoder(): FixedSizeDecoder<PackedMerkleContext> {
  return getStructDecoder([
    ["merkleTreePubkeyIndex", getU8Decoder()],
    ["queuePubkeyIndex", getU8Decoder()],
    ["leafIndex", getU32Decoder()],
    ["proveByIndex", getBooleanDecoder()],
  ]);
}

export function getPackedMerkleContextCodec(): FixedSizeCodec<
  PackedMerkleContextArgs,
  PackedMerkleContext
> {
  return combineCodec(
    getPackedMerkleContextEncoder(),
    getPackedMerkleContextDecoder()
  );
}
