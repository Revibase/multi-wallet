/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from "gill";
import {
  getDelegateCreationArgsDecoder,
  getDelegateCreationArgsEncoder,
  type DelegateCreationArgs,
  type DelegateCreationArgsArgs,
} from ".";

export type CreateDelegateArg = {
  member: Address;
  isPermanentMember: boolean;
  delegateCreationArgs: DelegateCreationArgs;
  apiUrl: Option<string>;
};

export type CreateDelegateArgArgs = {
  member: Address;
  isPermanentMember: boolean;
  delegateCreationArgs: DelegateCreationArgsArgs;
  apiUrl: OptionOrNullable<string>;
};

export function getCreateDelegateArgEncoder(): Encoder<CreateDelegateArgArgs> {
  return getStructEncoder([
    ["member", getAddressEncoder()],
    ["isPermanentMember", getBooleanEncoder()],
    ["delegateCreationArgs", getDelegateCreationArgsEncoder()],
    [
      "apiUrl",
      getOptionEncoder(addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())),
    ],
  ]);
}

export function getCreateDelegateArgDecoder(): Decoder<CreateDelegateArg> {
  return getStructDecoder([
    ["member", getAddressDecoder()],
    ["isPermanentMember", getBooleanDecoder()],
    ["delegateCreationArgs", getDelegateCreationArgsDecoder()],
    [
      "apiUrl",
      getOptionDecoder(addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())),
    ],
  ]);
}

export function getCreateDelegateArgCodec(): Codec<
  CreateDelegateArgArgs,
  CreateDelegateArg
> {
  return combineCodec(
    getCreateDelegateArgEncoder(),
    getCreateDelegateArgDecoder()
  );
}
