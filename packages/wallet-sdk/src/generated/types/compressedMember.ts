/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from "@solana/kit";
import {
  getMemberKeyDecoder,
  getMemberKeyEncoder,
  getPermissionsDecoder,
  getPermissionsEncoder,
  type IPermissions,
  type MemberKey,
  type MemberKeyArgs,
  type PermissionsArgs,
} from ".";

export type CompressedMember = {
  pubkey: MemberKey;
  permissions: IPermissions;
  domainConfig: Option<Address>;
};

export type CompressedMemberArgs = {
  pubkey: MemberKeyArgs;
  permissions: PermissionsArgs;
  domainConfig: OptionOrNullable<Address>;
};

export function getCompressedMemberEncoder(): Encoder<CompressedMemberArgs> {
  return getStructEncoder([
    ["pubkey", getMemberKeyEncoder()],
    ["permissions", getPermissionsEncoder()],
    ["domainConfig", getOptionEncoder(getAddressEncoder())],
  ]);
}

export function getCompressedMemberDecoder(): Decoder<CompressedMember> {
  return getStructDecoder([
    ["pubkey", getMemberKeyDecoder()],
    ["permissions", getPermissionsDecoder()],
    ["domainConfig", getOptionDecoder(getAddressDecoder())],
  ]);
}

export function getCompressedMemberCodec(): Codec<
  CompressedMemberArgs,
  CompressedMember
> {
  return combineCodec(
    getCompressedMemberEncoder(),
    getCompressedMemberDecoder()
  );
}
