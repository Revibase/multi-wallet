/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type CompressedProof = {
  a: ReadonlyUint8Array;
  b: ReadonlyUint8Array;
  c: ReadonlyUint8Array;
};

export type CompressedProofArgs = CompressedProof;

export function getCompressedProofEncoder(): Encoder<CompressedProofArgs> {
  return getStructEncoder([
    ['a', fixEncoderSize(getBytesEncoder(), 32)],
    ['b', fixEncoderSize(getBytesEncoder(), 64)],
    ['c', fixEncoderSize(getBytesEncoder(), 32)],
  ]);
}

export function getCompressedProofDecoder(): Decoder<CompressedProof> {
  return getStructDecoder([
    ['a', fixDecoderSize(getBytesDecoder(), 32)],
    ['b', fixDecoderSize(getBytesDecoder(), 64)],
    ['c', fixDecoderSize(getBytesDecoder(), 32)],
  ]);
}

export function getCompressedProofCodec(): Codec<
  CompressedProofArgs,
  CompressedProof
> {
  return combineCodec(getCompressedProofEncoder(), getCompressedProofDecoder());
}
