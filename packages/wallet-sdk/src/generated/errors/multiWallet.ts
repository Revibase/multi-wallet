/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  isProgramError,
  type Address,
  type SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,
  type SolanaError,
} from '@solana/kit';
import { MULTI_WALLET_PROGRAM_ADDRESS } from '../programs';

/** InvalidSignedMessage: Signed message does not match expected message. */
export const MULTI_WALLET_ERROR__INVALID_SIGNED_MESSAGE = 0x1770; // 6000
/** InvalidSecp256r1VerifyArg: Missing or malformed WebAuthn signature verification arguments (secp256r1). */
export const MULTI_WALLET_ERROR__INVALID_SECP256R1_VERIFY_ARG = 0x1771; // 6001
/** DurableNonceDetected: Durable nonce detected in the transaction. Durable nonces are unsupported. */
export const MULTI_WALLET_ERROR__DURABLE_NONCE_DETECTED = 0x1772; // 6002
/** DuplicateMember: Duplicate public keys found in the 'members' vector. Keys must be unique. */
export const MULTI_WALLET_ERROR__DUPLICATE_MEMBER = 0x1773; // 6003
/** InitialMemberCannotBeModified: Cannot modify the initial member of the multisig. */
export const MULTI_WALLET_ERROR__INITIAL_MEMBER_CANNOT_BE_MODIFIED = 0x1774; // 6004
/** EmptyMembers: Multisig must have at least one member. */
export const MULTI_WALLET_ERROR__EMPTY_MEMBERS = 0x1775; // 6005
/** TooManyMembers: Member list exceeds maximum allowed length (65,535). */
export const MULTI_WALLET_ERROR__TOO_MANY_MEMBERS = 0x1776; // 6006
/** InvalidThreshold: Invalid threshold. Must be ≥ 1 and ≤ voting members (only one passkey voter counts). */
export const MULTI_WALLET_ERROR__INVALID_THRESHOLD = 0x1777; // 6007
/** InvalidTransactionMessage: Malformed or invalid TransactionMessage structure. */
export const MULTI_WALLET_ERROR__INVALID_TRANSACTION_MESSAGE = 0x1778; // 6008
/** InvalidNumberOfAccounts: Mismatch in expected and provided account count. */
export const MULTI_WALLET_ERROR__INVALID_NUMBER_OF_ACCOUNTS = 0x1779; // 6009
/** InvalidAccount: One or more provided accounts failed validation. */
export const MULTI_WALLET_ERROR__INVALID_ACCOUNT = 0x177a; // 6010
/** MissingAccount: Required account is missing from instruction context. */
export const MULTI_WALLET_ERROR__MISSING_ACCOUNT = 0x177b; // 6011
/** AccountAlreadyExist: Target account already exists. Initialization is not allowed. */
export const MULTI_WALLET_ERROR__ACCOUNT_ALREADY_EXIST = 0x177c; // 6012
/** IllegalAccountOwner: Account is not owned by the multisig program. */
export const MULTI_WALLET_ERROR__ILLEGAL_ACCOUNT_OWNER = 0x177d; // 6013
/** InsufficientSignerWithExecutePermission: At least one signer must have 'execute' permission. */
export const MULTI_WALLET_ERROR__INSUFFICIENT_SIGNER_WITH_EXECUTE_PERMISSION = 0x177e; // 6014
/** InsufficientSignerWithInitiatePermission: At least one signer must have 'initiate' permission. */
export const MULTI_WALLET_ERROR__INSUFFICIENT_SIGNER_WITH_INITIATE_PERMISSION = 0x177f; // 6015
/** InsufficientSignersWithVotePermission: Threshold exceeds number of members with 'vote' permission. */
export const MULTI_WALLET_ERROR__INSUFFICIENT_SIGNERS_WITH_VOTE_PERMISSION = 0x1780; // 6016
/** InsufficientSignerWithIsDelegatePermission: At least one signer must have 'is_delegate' permission. */
export const MULTI_WALLET_ERROR__INSUFFICIENT_SIGNER_WITH_IS_DELEGATE_PERMISSION = 0x1781; // 6017
/** NoSignerFound: No valid signer was found in the current context. */
export const MULTI_WALLET_ERROR__NO_SIGNER_FOUND = 0x1782; // 6018
/** UnauthorisedToCloseTransactionBuffer: Only the transaction creator or rent payer may close the transaction buffer. */
export const MULTI_WALLET_ERROR__UNAUTHORISED_TO_CLOSE_TRANSACTION_BUFFER = 0x1783; // 6019
/** InvalidBuffer: Buffer content does not match the expected hash. */
export const MULTI_WALLET_ERROR__INVALID_BUFFER = 0x1784; // 6020
/** FinalBufferHashMismatch: Final buffer hash mismatch. Possibly tampered or improperly serialized. */
export const MULTI_WALLET_ERROR__FINAL_BUFFER_HASH_MISMATCH = 0x1785; // 6021
/** FinalBufferSizeExceeded: Final serialized buffer size exceeds the 10128-byte limit. */
export const MULTI_WALLET_ERROR__FINAL_BUFFER_SIZE_EXCEEDED = 0x1786; // 6022
/** FinalBufferSizeMismatch: Declared final buffer size does not match actual size. */
export const MULTI_WALLET_ERROR__FINAL_BUFFER_SIZE_MISMATCH = 0x1787; // 6023
/** TransactionHasExpired: Transaction expired — TTL of 3 minutes exceeded. */
export const MULTI_WALLET_ERROR__TRANSACTION_HAS_EXPIRED = 0x1788; // 6024
/** TransactionNotApproved: Transaction has not yet reached the required approval threshold. */
export const MULTI_WALLET_ERROR__TRANSACTION_NOT_APPROVED = 0x1789; // 6025
/** ProtectedAccount: Writable CPI attempted on a protected account. This is not allowed. */
export const MULTI_WALLET_ERROR__PROTECTED_ACCOUNT = 0x178a; // 6026
/** MaxLengthExceeded: Input string exceeded the character limit. */
export const MULTI_WALLET_ERROR__MAX_LENGTH_EXCEEDED = 0x178b; // 6027
/** MissingSysvarSlotHistory: Sysvar: Slot history is missing. Ensure it's passed as an account. */
export const MULTI_WALLET_ERROR__MISSING_SYSVAR_SLOT_HISTORY = 0x178c; // 6028
/** InvalidSysvarDataFormat: Sysvar parsing failed. Expected slot history format is invalid or corrupted. */
export const MULTI_WALLET_ERROR__INVALID_SYSVAR_DATA_FORMAT = 0x178d; // 6029
/** SlotNumberNotFound: Specified slot not found in the provided slot history. */
export const MULTI_WALLET_ERROR__SLOT_NUMBER_NOT_FOUND = 0x178e; // 6030
/** SlotHashMismatch: Slot hash does not match recorded history. */
export const MULTI_WALLET_ERROR__SLOT_HASH_MISMATCH = 0x178f; // 6031
/** DomainConfigIsDisabled: The specified domain configuration account is temporarily disabled. */
export const MULTI_WALLET_ERROR__DOMAIN_CONFIG_IS_DISABLED = 0x1790; // 6032
/** DomainConfigIsMissing: Domain configuration account is missing. */
export const MULTI_WALLET_ERROR__DOMAIN_CONFIG_IS_MISSING = 0x1791; // 6033
/** MemberDoesNotBelongToDomainConfig: Member is not registered in the specified domain config. */
export const MULTI_WALLET_ERROR__MEMBER_DOES_NOT_BELONG_TO_DOMAIN_CONFIG = 0x1792; // 6034
/** RpIdHashMismatch: Client RP ID hash does not match domain configuration. */
export const MULTI_WALLET_ERROR__RP_ID_HASH_MISMATCH = 0x1793; // 6035
/** InvalidJson: Failed to parse JSON in client data. Invalid format. */
export const MULTI_WALLET_ERROR__INVALID_JSON = 0x1794; // 6036
/** MissingOrigin: Missing 'origin' field in clientDataJSON. */
export const MULTI_WALLET_ERROR__MISSING_ORIGIN = 0x1795; // 6037
/** InvalidOrigin: Invalid or unexpected 'origin' in clientDataJSON. */
export const MULTI_WALLET_ERROR__INVALID_ORIGIN = 0x1796; // 6038
/** MissingType: Missing 'type' field in clientDataJSON. */
export const MULTI_WALLET_ERROR__MISSING_TYPE = 0x1797; // 6039
/** InvalidType: Invalid 'type' in clientDataJSON. Expected 'webauthn.get'. */
export const MULTI_WALLET_ERROR__INVALID_TYPE = 0x1798; // 6040
/** MissingChallenge: Missing 'challenge' field in clientDataJSON. */
export const MULTI_WALLET_ERROR__MISSING_CHALLENGE = 0x1799; // 6041
/** InvalidChallenge: Invalid or mismatched challenge in clientDataJSON. */
export const MULTI_WALLET_ERROR__INVALID_CHALLENGE = 0x179a; // 6042

export type MultiWalletError =
  | typeof MULTI_WALLET_ERROR__ACCOUNT_ALREADY_EXIST
  | typeof MULTI_WALLET_ERROR__DOMAIN_CONFIG_IS_DISABLED
  | typeof MULTI_WALLET_ERROR__DOMAIN_CONFIG_IS_MISSING
  | typeof MULTI_WALLET_ERROR__DUPLICATE_MEMBER
  | typeof MULTI_WALLET_ERROR__DURABLE_NONCE_DETECTED
  | typeof MULTI_WALLET_ERROR__EMPTY_MEMBERS
  | typeof MULTI_WALLET_ERROR__FINAL_BUFFER_HASH_MISMATCH
  | typeof MULTI_WALLET_ERROR__FINAL_BUFFER_SIZE_EXCEEDED
  | typeof MULTI_WALLET_ERROR__FINAL_BUFFER_SIZE_MISMATCH
  | typeof MULTI_WALLET_ERROR__ILLEGAL_ACCOUNT_OWNER
  | typeof MULTI_WALLET_ERROR__INITIAL_MEMBER_CANNOT_BE_MODIFIED
  | typeof MULTI_WALLET_ERROR__INSUFFICIENT_SIGNERS_WITH_VOTE_PERMISSION
  | typeof MULTI_WALLET_ERROR__INSUFFICIENT_SIGNER_WITH_EXECUTE_PERMISSION
  | typeof MULTI_WALLET_ERROR__INSUFFICIENT_SIGNER_WITH_INITIATE_PERMISSION
  | typeof MULTI_WALLET_ERROR__INSUFFICIENT_SIGNER_WITH_IS_DELEGATE_PERMISSION
  | typeof MULTI_WALLET_ERROR__INVALID_ACCOUNT
  | typeof MULTI_WALLET_ERROR__INVALID_BUFFER
  | typeof MULTI_WALLET_ERROR__INVALID_CHALLENGE
  | typeof MULTI_WALLET_ERROR__INVALID_JSON
  | typeof MULTI_WALLET_ERROR__INVALID_NUMBER_OF_ACCOUNTS
  | typeof MULTI_WALLET_ERROR__INVALID_ORIGIN
  | typeof MULTI_WALLET_ERROR__INVALID_SECP256R1_VERIFY_ARG
  | typeof MULTI_WALLET_ERROR__INVALID_SIGNED_MESSAGE
  | typeof MULTI_WALLET_ERROR__INVALID_SYSVAR_DATA_FORMAT
  | typeof MULTI_WALLET_ERROR__INVALID_THRESHOLD
  | typeof MULTI_WALLET_ERROR__INVALID_TRANSACTION_MESSAGE
  | typeof MULTI_WALLET_ERROR__INVALID_TYPE
  | typeof MULTI_WALLET_ERROR__MAX_LENGTH_EXCEEDED
  | typeof MULTI_WALLET_ERROR__MEMBER_DOES_NOT_BELONG_TO_DOMAIN_CONFIG
  | typeof MULTI_WALLET_ERROR__MISSING_ACCOUNT
  | typeof MULTI_WALLET_ERROR__MISSING_CHALLENGE
  | typeof MULTI_WALLET_ERROR__MISSING_ORIGIN
  | typeof MULTI_WALLET_ERROR__MISSING_SYSVAR_SLOT_HISTORY
  | typeof MULTI_WALLET_ERROR__MISSING_TYPE
  | typeof MULTI_WALLET_ERROR__NO_SIGNER_FOUND
  | typeof MULTI_WALLET_ERROR__PROTECTED_ACCOUNT
  | typeof MULTI_WALLET_ERROR__RP_ID_HASH_MISMATCH
  | typeof MULTI_WALLET_ERROR__SLOT_HASH_MISMATCH
  | typeof MULTI_WALLET_ERROR__SLOT_NUMBER_NOT_FOUND
  | typeof MULTI_WALLET_ERROR__TOO_MANY_MEMBERS
  | typeof MULTI_WALLET_ERROR__TRANSACTION_HAS_EXPIRED
  | typeof MULTI_WALLET_ERROR__TRANSACTION_NOT_APPROVED
  | typeof MULTI_WALLET_ERROR__UNAUTHORISED_TO_CLOSE_TRANSACTION_BUFFER;

let multiWalletErrorMessages: Record<MultiWalletError, string> | undefined;
if (process.env.NODE_ENV !== 'production') {
  multiWalletErrorMessages = {
    [MULTI_WALLET_ERROR__ACCOUNT_ALREADY_EXIST]: `Target account already exists. Initialization is not allowed.`,
    [MULTI_WALLET_ERROR__DOMAIN_CONFIG_IS_DISABLED]: `The specified domain configuration account is temporarily disabled.`,
    [MULTI_WALLET_ERROR__DOMAIN_CONFIG_IS_MISSING]: `Domain configuration account is missing.`,
    [MULTI_WALLET_ERROR__DUPLICATE_MEMBER]: `Duplicate public keys found in the 'members' vector. Keys must be unique.`,
    [MULTI_WALLET_ERROR__DURABLE_NONCE_DETECTED]: `Durable nonce detected in the transaction. Durable nonces are unsupported.`,
    [MULTI_WALLET_ERROR__EMPTY_MEMBERS]: `Multisig must have at least one member.`,
    [MULTI_WALLET_ERROR__FINAL_BUFFER_HASH_MISMATCH]: `Final buffer hash mismatch. Possibly tampered or improperly serialized.`,
    [MULTI_WALLET_ERROR__FINAL_BUFFER_SIZE_EXCEEDED]: `Final serialized buffer size exceeds the 10128-byte limit.`,
    [MULTI_WALLET_ERROR__FINAL_BUFFER_SIZE_MISMATCH]: `Declared final buffer size does not match actual size.`,
    [MULTI_WALLET_ERROR__ILLEGAL_ACCOUNT_OWNER]: `Account is not owned by the multisig program.`,
    [MULTI_WALLET_ERROR__INITIAL_MEMBER_CANNOT_BE_MODIFIED]: `Cannot modify the initial member of the multisig.`,
    [MULTI_WALLET_ERROR__INSUFFICIENT_SIGNERS_WITH_VOTE_PERMISSION]: `Threshold exceeds number of members with 'vote' permission.`,
    [MULTI_WALLET_ERROR__INSUFFICIENT_SIGNER_WITH_EXECUTE_PERMISSION]: `At least one signer must have 'execute' permission.`,
    [MULTI_WALLET_ERROR__INSUFFICIENT_SIGNER_WITH_INITIATE_PERMISSION]: `At least one signer must have 'initiate' permission.`,
    [MULTI_WALLET_ERROR__INSUFFICIENT_SIGNER_WITH_IS_DELEGATE_PERMISSION]: `At least one signer must have 'is_delegate' permission.`,
    [MULTI_WALLET_ERROR__INVALID_ACCOUNT]: `One or more provided accounts failed validation.`,
    [MULTI_WALLET_ERROR__INVALID_BUFFER]: `Buffer content does not match the expected hash.`,
    [MULTI_WALLET_ERROR__INVALID_CHALLENGE]: `Invalid or mismatched challenge in clientDataJSON.`,
    [MULTI_WALLET_ERROR__INVALID_JSON]: `Failed to parse JSON in client data. Invalid format.`,
    [MULTI_WALLET_ERROR__INVALID_NUMBER_OF_ACCOUNTS]: `Mismatch in expected and provided account count.`,
    [MULTI_WALLET_ERROR__INVALID_ORIGIN]: `Invalid or unexpected 'origin' in clientDataJSON.`,
    [MULTI_WALLET_ERROR__INVALID_SECP256R1_VERIFY_ARG]: `Missing or malformed WebAuthn signature verification arguments (secp256r1).`,
    [MULTI_WALLET_ERROR__INVALID_SIGNED_MESSAGE]: `Signed message does not match expected message.`,
    [MULTI_WALLET_ERROR__INVALID_SYSVAR_DATA_FORMAT]: `Sysvar parsing failed. Expected slot history format is invalid or corrupted.`,
    [MULTI_WALLET_ERROR__INVALID_THRESHOLD]: `Invalid threshold. Must be ≥ 1 and ≤ voting members (only one passkey voter counts).`,
    [MULTI_WALLET_ERROR__INVALID_TRANSACTION_MESSAGE]: `Malformed or invalid TransactionMessage structure.`,
    [MULTI_WALLET_ERROR__INVALID_TYPE]: `Invalid 'type' in clientDataJSON. Expected 'webauthn.get'.`,
    [MULTI_WALLET_ERROR__MAX_LENGTH_EXCEEDED]: `Input string exceeded the character limit.`,
    [MULTI_WALLET_ERROR__MEMBER_DOES_NOT_BELONG_TO_DOMAIN_CONFIG]: `Member is not registered in the specified domain config.`,
    [MULTI_WALLET_ERROR__MISSING_ACCOUNT]: `Required account is missing from instruction context.`,
    [MULTI_WALLET_ERROR__MISSING_CHALLENGE]: `Missing 'challenge' field in clientDataJSON.`,
    [MULTI_WALLET_ERROR__MISSING_ORIGIN]: `Missing 'origin' field in clientDataJSON.`,
    [MULTI_WALLET_ERROR__MISSING_SYSVAR_SLOT_HISTORY]: `Sysvar: Slot history is missing. Ensure it's passed as an account.`,
    [MULTI_WALLET_ERROR__MISSING_TYPE]: `Missing 'type' field in clientDataJSON.`,
    [MULTI_WALLET_ERROR__NO_SIGNER_FOUND]: `No valid signer was found in the current context.`,
    [MULTI_WALLET_ERROR__PROTECTED_ACCOUNT]: `Writable CPI attempted on a protected account. This is not allowed.`,
    [MULTI_WALLET_ERROR__RP_ID_HASH_MISMATCH]: `Client RP ID hash does not match domain configuration.`,
    [MULTI_WALLET_ERROR__SLOT_HASH_MISMATCH]: `Slot hash does not match recorded history.`,
    [MULTI_WALLET_ERROR__SLOT_NUMBER_NOT_FOUND]: `Specified slot not found in the provided slot history.`,
    [MULTI_WALLET_ERROR__TOO_MANY_MEMBERS]: `Member list exceeds maximum allowed length (65,535).`,
    [MULTI_WALLET_ERROR__TRANSACTION_HAS_EXPIRED]: `Transaction expired — TTL of 3 minutes exceeded.`,
    [MULTI_WALLET_ERROR__TRANSACTION_NOT_APPROVED]: `Transaction has not yet reached the required approval threshold.`,
    [MULTI_WALLET_ERROR__UNAUTHORISED_TO_CLOSE_TRANSACTION_BUFFER]: `Only the transaction creator or rent payer may close the transaction buffer.`,
  };
}

export function getMultiWalletErrorMessage(code: MultiWalletError): string {
  if (process.env.NODE_ENV !== 'production') {
    return (multiWalletErrorMessages as Record<MultiWalletError, string>)[code];
  }

  return 'Error message not available in production bundles.';
}

export function isMultiWalletError<TProgramErrorCode extends MultiWalletError>(
  error: unknown,
  transactionMessage: {
    instructions: Record<number, { programAddress: Address }>;
  },
  code?: TProgramErrorCode
): error is SolanaError<typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM> &
  Readonly<{ context: Readonly<{ code: TProgramErrorCode }> }> {
  return isProgramError<TProgramErrorCode>(
    error,
    transactionMessage,
    MULTI_WALLET_PROGRAM_ADDRESS,
    code
  );
}
