{
  "address": "pkeyt2Txg77e2JSS2K44hDnC2p6uE4jXnd2UQZxZ2oE",
  "metadata": {
    "name": "multi_wallet",
    "version": "0.1.0",
    "spec": "0.1.0",
    "description": "Created with Anchor"
  },
  "instructions": [
    {
      "name": "change_config",
      "docs": [
        "Applies one or more configuration changes to an existing multi-wallet."
      ],
      "discriminator": [24, 158, 114, 115, 94, 210, 244, 233],
      "accounts": [
        {
          "name": "settings",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109, 117, 108, 116, 105, 95, 119, 97, 108, 108, 101, 116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [118, 97, 117, 108, 116]
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "config_actions",
          "type": {
            "vec": {
              "defined": {
                "name": "ConfigAction"
              }
            }
          }
        }
      ]
    },
    {
      "name": "create",
      "docs": [
        "Creates a new multi-wallet with the specified permissions and ownership."
      ],
      "discriminator": [24, 30, 200, 40, 5, 28, 7, 119],
      "accounts": [
        {
          "name": "settings",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109, 117, 108, 116, 105, 95, 119, 97, 108, 108, 101, 116
                ]
              },
              {
                "kind": "arg",
                "path": "create_key"
              }
            ]
          }
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "initial_member",
          "signer": true,
          "optional": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "optional": true,
          "address": "Sysvar1nstructions1111111111111111111111111"
        },
        {
          "name": "domain_config",
          "optional": true
        },
        {
          "name": "delegate_account",
          "writable": true,
          "optional": true
        }
      ],
      "args": [
        {
          "name": "create_key",
          "type": "pubkey"
        },
        {
          "name": "secp256r1_verify_args",
          "type": {
            "option": {
              "defined": {
                "name": "Secp256r1VerifyArgs"
              }
            }
          }
        },
        {
          "name": "permissions",
          "type": {
            "defined": {
              "name": "Permissions"
            }
          }
        }
      ]
    },
    {
      "name": "create_domain_config",
      "docs": [
        "Initializes a new domain configuration used for WebAuthn (secp256r1) verification."
      ],
      "discriminator": [197, 81, 191, 2, 164, 140, 184, 90],
      "accounts": [
        {
          "name": "domain_config",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  100, 111, 109, 97, 105, 110, 95, 99, 111, 110, 102, 105, 103
                ]
              },
              {
                "kind": "arg",
                "path": "args.rp_id_hash"
              }
            ]
          }
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "CreateDomainConfigArgs"
            }
          }
        }
      ]
    },
    {
      "name": "delete_domain_config",
      "docs": [
        "Deletes an existing domain configuration used for WebAuthn (secp256r1) verification."
      ],
      "discriminator": [225, 169, 39, 18, 125, 147, 36, 29],
      "accounts": [
        {
          "name": "domain_config",
          "writable": true
        },
        {
          "name": "admin",
          "writable": true,
          "address": "G6kBnedts6uAivtY72ToaFHBs1UVbT9udiXmQZgMEjoF"
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "disable_domain_config",
      "docs": [
        "Enables or disables a domain configuration. Useful for temporary suspension."
      ],
      "discriminator": [169, 163, 147, 131, 58, 46, 131, 51],
      "accounts": [
        {
          "name": "domain_config",
          "writable": true
        },
        {
          "name": "admin",
          "signer": true,
          "address": "G6kBnedts6uAivtY72ToaFHBs1UVbT9udiXmQZgMEjoF"
        }
      ],
      "args": [
        {
          "name": "disable",
          "type": "bool"
        }
      ]
    },
    {
      "name": "edit_domain_config",
      "docs": [
        "Updates an existing domain configuration used for WebAuthn (secp256r1) verification."
      ],
      "discriminator": [110, 212, 99, 229, 72, 93, 185, 231],
      "accounts": [
        {
          "name": "domain_config",
          "writable": true
        },
        {
          "name": "authority",
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "EditDomainConfigArgs"
            }
          }
        }
      ]
    },
    {
      "name": "native_transfer_intent",
      "docs": ["Transfers SOL using a signed transfer intent."],
      "discriminator": [57, 156, 213, 157, 88, 202, 2, 151],
      "accounts": [
        {
          "name": "settings"
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "address": "Sysvar1nstructions1111111111111111111111111"
        },
        {
          "name": "domain_config",
          "optional": true
        },
        {
          "name": "source",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109, 117, 108, 116, 105, 95, 119, 97, 108, 108, 101, 116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [118, 97, 117, 108, 116]
              }
            ]
          }
        },
        {
          "name": "destination",
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        },
        {
          "name": "secp256r1_verify_args",
          "type": {
            "option": {
              "defined": {
                "name": "Secp256r1VerifyArgs"
              }
            }
          }
        }
      ]
    },
    {
      "name": "token_transfer_intent",
      "docs": ["Transfers SPL tokens using a signed transfer intent."],
      "discriminator": [51, 91, 96, 155, 132, 232, 179, 48],
      "accounts": [
        {
          "name": "settings"
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "address": "Sysvar1nstructions1111111111111111111111111"
        },
        {
          "name": "domain_config",
          "optional": true
        },
        {
          "name": "source",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109, 117, 108, 116, 105, 95, 119, 97, 108, 108, 101, 116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [118, 97, 117, 108, 116]
              }
            ]
          }
        },
        {
          "name": "source_token_account",
          "writable": true
        },
        {
          "name": "destination"
        },
        {
          "name": "destination_token_account",
          "writable": true
        },
        {
          "name": "token_program"
        },
        {
          "name": "mint"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "associated_token_program",
          "address": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        },
        {
          "name": "secp256r1_verify_args",
          "type": {
            "option": {
              "defined": {
                "name": "Secp256r1VerifyArgs"
              }
            }
          }
        }
      ]
    },
    {
      "name": "transaction_buffer_close",
      "docs": ["Closes and cleans up a transaction buffer."],
      "discriminator": [17, 182, 208, 228, 136, 24, 178, 102],
      "accounts": [
        {
          "name": "settings"
        },
        {
          "name": "payer",
          "writable": true
        },
        {
          "name": "domain_config",
          "optional": true
        },
        {
          "name": "transaction_buffer",
          "writable": true
        },
        {
          "name": "closer",
          "signer": true,
          "optional": true
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "optional": true,
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "secp256r1_verify_args",
          "type": {
            "option": {
              "defined": {
                "name": "Secp256r1VerifyArgs"
              }
            }
          }
        }
      ]
    },
    {
      "name": "transaction_buffer_create",
      "docs": [
        "Creates a new transaction buffer to stage a transaction before execution."
      ],
      "discriminator": [245, 201, 113, 108, 37, 63, 29, 89],
      "accounts": [
        {
          "name": "settings"
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "domain_config",
          "optional": true
        },
        {
          "name": "transaction_buffer",
          "writable": true
        },
        {
          "name": "creator",
          "signer": true,
          "optional": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "address": "Sysvar1nstructions1111111111111111111111111"
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "TransactionBufferCreateArgs"
            }
          }
        },
        {
          "name": "secp256r1_verify_args",
          "type": {
            "option": {
              "defined": {
                "name": "Secp256r1VerifyArgs"
              }
            }
          }
        }
      ]
    },
    {
      "name": "transaction_buffer_execute",
      "docs": ["Executes a previously approved transaction buffer."],
      "discriminator": [48, 73, 34, 19, 129, 99, 128, 73],
      "accounts": [
        {
          "name": "settings"
        },
        {
          "name": "domain_config",
          "optional": true
        },
        {
          "name": "executor",
          "signer": true,
          "optional": true
        },
        {
          "name": "transaction_buffer",
          "writable": true
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "optional": true,
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "secp256r1_verify_args",
          "type": {
            "option": {
              "defined": {
                "name": "Secp256r1VerifyArgs"
              }
            }
          }
        }
      ]
    },
    {
      "name": "transaction_buffer_extend",
      "docs": [
        "Extends an existing transaction buffer to allow for updated data or additional time."
      ],
      "discriminator": [230, 157, 67, 56, 5, 238, 245, 146],
      "accounts": [
        {
          "name": "settings"
        },
        {
          "name": "transaction_buffer",
          "writable": true
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "TransactionBufferExtendArgs"
            }
          }
        }
      ]
    },
    {
      "name": "transaction_buffer_vote",
      "docs": ["Signs a transaction buffer to register approval."],
      "discriminator": [203, 50, 79, 187, 94, 53, 82, 122],
      "accounts": [
        {
          "name": "settings"
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "domain_config",
          "optional": true
        },
        {
          "name": "transaction_buffer",
          "writable": true
        },
        {
          "name": "voter",
          "signer": true,
          "optional": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "optional": true,
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "secp256r1_verify_args",
          "type": {
            "option": {
              "defined": {
                "name": "Secp256r1VerifyArgs"
              }
            }
          }
        }
      ]
    },
    {
      "name": "transaction_execute",
      "docs": ["Executes a staged transaction from a buffer."],
      "discriminator": [93, 171, 78, 134, 252, 84, 186, 189],
      "accounts": [
        {
          "name": "settings",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true
        },
        {
          "name": "transaction_buffer",
          "writable": true
        }
      ],
      "args": []
    },
    {
      "name": "transaction_execute_sync",
      "docs": [
        "Executes a transaction synchronously by directly submitting the message and verifying it."
      ],
      "discriminator": [149, 138, 204, 32, 181, 61, 153, 227],
      "accounts": [
        {
          "name": "settings",
          "writable": true
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "domain_config",
          "optional": true
        },
        {
          "name": "instructions_sysvar",
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "transaction_message",
          "type": {
            "defined": {
              "name": "TransactionMessage"
            }
          }
        },
        {
          "name": "secp256r1_verify_args",
          "type": {
            "option": {
              "defined": {
                "name": "Secp256r1VerifyArgs"
              }
            }
          }
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "Delegate",
      "discriminator": [92, 145, 166, 111, 11, 38, 38, 247]
    },
    {
      "name": "DomainConfig",
      "discriminator": [201, 232, 212, 229, 59, 241, 106, 197]
    },
    {
      "name": "Settings",
      "discriminator": [223, 179, 163, 190, 177, 224, 67, 173]
    },
    {
      "name": "TransactionBuffer",
      "discriminator": [90, 36, 35, 219, 93, 225, 110, 96]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "InvalidSignedMessage",
      "msg": "The provided signature doesn't match the expected message. Make sure you're signing the correct payload."
    },
    {
      "code": 6001,
      "name": "InvalidSecp256r1VerifyArg",
      "msg": "Missing or incorrectly formatted WebAuthn verification arguments. Please check the secp256r1 signature input."
    },
    {
      "code": 6002,
      "name": "DurableNonceDetected",
      "msg": "This transaction includes a durable nonce, which is not supported by this program."
    },
    {
      "code": 6003,
      "name": "DuplicateMember",
      "msg": "Duplicate public keys detected in the member list. Each member must have a unique key."
    },
    {
      "code": 6004,
      "name": "EmptyMembers",
      "msg": "No members were provided. A multisig must have at least one member."
    },
    {
      "code": 6005,
      "name": "TooManyMembers",
      "msg": "The number of members exceeds the supported maximum (65,535)."
    },
    {
      "code": 6006,
      "name": "InvalidThreshold",
      "msg": "Invalid threshold value. It must be at least 1 and not exceed the number of voting-eligible members."
    },
    {
      "code": 6007,
      "name": "InvalidTransactionMessage",
      "msg": "The transaction message structure is malformed or does not follow expected formatting."
    },
    {
      "code": 6008,
      "name": "InvalidNumberOfAccounts",
      "msg": "The number of provided accounts does not match what was expected for this instruction."
    },
    {
      "code": 6009,
      "name": "InvalidAccount",
      "msg": "One or more accounts provided failed validation. Ensure all required accounts are included and correct."
    },
    {
      "code": 6010,
      "name": "MissingAccount",
      "msg": "A required account is missing from the transaction context."
    },
    {
      "code": 6011,
      "name": "AccountAlreadyExist",
      "msg": "The account you're trying to initialize already exists."
    },
    {
      "code": 6012,
      "name": "IllegalAccountOwner",
      "msg": "The account is not owned by the multisig program. Ensure the correct program owns this account."
    },
    {
      "code": 6013,
      "name": "InsuffientSignerWithDelegatePermission",
      "msg": "A delegate account is required when the initial member has requested delegate permissions."
    },
    {
      "code": 6014,
      "name": "InsufficientSignerWithExecutePermission",
      "msg": "At least one signer must have execute permissions to proceed."
    },
    {
      "code": 6015,
      "name": "InsufficientSignerWithInitiatePermission",
      "msg": "At least one signer must have initiate permissions to perform this action."
    },
    {
      "code": 6016,
      "name": "InsufficientSignersWithVotePermission",
      "msg": "The approval threshold cannot be met because there aren't enough voters with the vote permission."
    },
    {
      "code": 6017,
      "name": "NoSignerFound",
      "msg": "No valid signer was found in this transaction. Ensure at least one authorized signer is present."
    },
    {
      "code": 6018,
      "name": "UnauthorisedToCloseTransactionBuffer",
      "msg": "Only the transaction's creator or rent payer is allowed to close the transaction buffer."
    },
    {
      "code": 6019,
      "name": "InvalidBuffer",
      "msg": "The contents of the buffer do not match the expected hash. It may have been tampered with."
    },
    {
      "code": 6020,
      "name": "FinalBufferHashMismatch",
      "msg": "The final hash of the buffer doesn't match what was expected. The buffer might be corrupted or altered."
    },
    {
      "code": 6021,
      "name": "FinalBufferSizeExceeded",
      "msg": "The serialized transaction buffer exceeds the maximum allowed size of 10,128 bytes."
    },
    {
      "code": 6022,
      "name": "FinalBufferSizeMismatch",
      "msg": "The declared size of the buffer does not match its actual size."
    },
    {
      "code": 6023,
      "name": "TransactionHasExpired",
      "msg": "The transaction has expired. It must be executed within 3 minutes of approval."
    },
    {
      "code": 6024,
      "name": "TransactionNotApproved",
      "msg": "The transaction hasn't received enough approvals yet to be executed."
    },
    {
      "code": 6025,
      "name": "ProtectedAccount",
      "msg": "Writable CPI calls to protected accounts are not permitted."
    },
    {
      "code": 6026,
      "name": "MaxLengthExceeded",
      "msg": "One of the input strings exceeds the maximum allowed character limit."
    },
    {
      "code": 6027,
      "name": "MissingSysvarSlotHistory",
      "msg": "The Slot History sysvar account is missing. It must be included as an account in this instruction."
    },
    {
      "code": 6028,
      "name": "InvalidSysvarDataFormat",
      "msg": "Failed to parse sysvar: slot history format is invalid or corrupted."
    },
    {
      "code": 6029,
      "name": "SlotNumberNotFound",
      "msg": "The specified slot number is not present in the provided slot history."
    },
    {
      "code": 6030,
      "name": "SlotHashMismatch",
      "msg": "The slot hash doesn't match the expected value from slot history."
    },
    {
      "code": 6031,
      "name": "DomainConfigIsDisabled",
      "msg": "The domain configuration account is currently disabled. Contact support or try again later."
    },
    {
      "code": 6032,
      "name": "DomainConfigIsMissing",
      "msg": "Missing domain configuration account. Ensure it's passed in the instruction."
    },
    {
      "code": 6033,
      "name": "MemberDoesNotBelongToDomainConfig",
      "msg": "This member is not registered in the provided domain configuration."
    },
    {
      "code": 6034,
      "name": "RpIdHashMismatch",
      "msg": "The relying party ID hash does not match the one specified in the domain configuration."
    },
    {
      "code": 6035,
      "name": "InvalidJson",
      "msg": "Failed to parse the client data JSON. The format may be invalid."
    },
    {
      "code": 6036,
      "name": "MissingOrigin",
      "msg": "Missing origin field in clientDataJSON. This field is required for WebAuthn validation."
    },
    {
      "code": 6037,
      "name": "InvalidOrigin",
      "msg": "The origin value in clientDataJSON does not match the expected domain."
    },
    {
      "code": 6038,
      "name": "MissingType",
      "msg": "Missing type field in clientDataJSON. This field is required for WebAuthn validation."
    },
    {
      "code": 6039,
      "name": "InvalidType",
      "msg": "The type field in clientDataJSON is invalid. Expected value: webauthn.get."
    },
    {
      "code": 6040,
      "name": "MissingChallenge",
      "msg": "Missing challenge field in clientDataJSON. This is required for validating the authentication request."
    },
    {
      "code": 6041,
      "name": "InvalidChallenge",
      "msg": "The challenge value in clientDataJSON is missing or doesn't match the expected challenge."
    }
  ],
  "types": [
    {
      "name": "CompiledInstruction",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "program_id_index",
            "type": "u8"
          },
          {
            "name": "account_indexes",
            "docs": [
              "Indices into the tx's `account_keys` list indicating which accounts to pass to the instruction."
            ],
            "type": "bytes"
          },
          {
            "name": "data",
            "docs": ["Instruction data."],
            "type": "bytes"
          }
        ]
      }
    },
    {
      "name": "ConfigAction",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "EditPermissions",
            "fields": [
              {
                "vec": {
                  "defined": {
                    "name": "MemberKeyWithPermissionsArgs"
                  }
                }
              }
            ]
          },
          {
            "name": "AddMembers",
            "fields": [
              {
                "vec": {
                  "defined": {
                    "name": "MemberWithVerifyArgs"
                  }
                }
              }
            ]
          },
          {
            "name": "RemoveMembers",
            "fields": [
              {
                "vec": {
                  "defined": {
                    "name": "MemberKey"
                  }
                }
              }
            ]
          },
          {
            "name": "SetThreshold",
            "fields": ["u8"]
          }
        ]
      }
    },
    {
      "name": "CreateDomainConfigArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "rp_id",
            "type": "string"
          },
          {
            "name": "rp_id_hash",
            "type": {
              "array": ["u8", 32]
            }
          },
          {
            "name": "origin",
            "type": "string"
          },
          {
            "name": "authority",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "Delegate",
      "serialization": "bytemuck",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "multi_wallet_settings",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "DomainConfig",
      "serialization": "bytemuck",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "origin_length",
            "type": "u16"
          },
          {
            "name": "authority",
            "type": "pubkey"
          },
          {
            "name": "rp_id_hash",
            "type": {
              "array": ["u8", 32]
            }
          },
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "is_disabled",
            "type": "u8"
          },
          {
            "name": "rp_id_length",
            "type": "u8"
          },
          {
            "name": "rp_id",
            "type": {
              "array": ["u8", 256]
            }
          },
          {
            "name": "origin",
            "type": {
              "array": ["u8", 512]
            }
          },
          {
            "name": "padding",
            "type": {
              "array": ["u8", 1]
            }
          }
        ]
      }
    },
    {
      "name": "EditDomainConfigArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "origin",
            "type": "string"
          },
          {
            "name": "authority",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "Member",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "pubkey",
            "type": {
              "defined": {
                "name": "MemberKey"
              }
            }
          },
          {
            "name": "permissions",
            "type": {
              "defined": {
                "name": "Permissions"
              }
            }
          },
          {
            "name": "domain_config",
            "type": {
              "option": "pubkey"
            }
          }
        ]
      }
    },
    {
      "name": "MemberKey",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "key_type",
            "type": "u8"
          },
          {
            "name": "key",
            "type": {
              "array": ["u8", 33]
            }
          }
        ]
      }
    },
    {
      "name": "MemberKeyWithPermissionsArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "pubkey",
            "type": {
              "defined": {
                "name": "MemberKey"
              }
            }
          },
          {
            "name": "permissions",
            "type": {
              "defined": {
                "name": "Permissions"
              }
            }
          }
        ]
      }
    },
    {
      "name": "MemberWithVerifyArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "data",
            "type": {
              "defined": {
                "name": "Member"
              }
            }
          },
          {
            "name": "verify_args",
            "type": {
              "option": {
                "defined": {
                  "name": "Secp256r1VerifyArgs"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "Permissions",
      "docs": ["Bitmask for permissions."],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "mask",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "Secp256r1Pubkey",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "array": ["u8", 33]
          }
        ]
      }
    },
    {
      "name": "Secp256r1VerifyArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "public_key",
            "type": {
              "defined": {
                "name": "Secp256r1Pubkey"
              }
            }
          },
          {
            "name": "client_data_json",
            "type": "bytes"
          },
          {
            "name": "slot_number",
            "type": "u64"
          },
          {
            "name": "slot_hash",
            "type": {
              "array": ["u8", 32]
            }
          }
        ]
      }
    },
    {
      "name": "Settings",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "threshold",
            "type": "u8"
          },
          {
            "name": "multi_wallet_bump",
            "type": "u8"
          },
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "create_key",
            "type": "pubkey"
          },
          {
            "name": "members",
            "type": {
              "vec": {
                "defined": {
                  "name": "Member"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "TransactionBuffer",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "multi_wallet_settings",
            "docs": ["The multisig settings this belongs to."],
            "type": "pubkey"
          },
          {
            "name": "multi_wallet_bump",
            "docs": ["The bump for the multi_wallet"],
            "type": "u8"
          },
          {
            "name": "can_execute",
            "docs": ["Flag to allow transaction to be executed"],
            "type": "bool"
          },
          {
            "name": "permissionless_execution",
            "docs": [
              "Flag to allow execution without sigverify once sufficient threshold is met"
            ],
            "type": "bool"
          },
          {
            "name": "expiry",
            "type": "u64"
          },
          {
            "name": "payer",
            "docs": ["Payer for the transaction buffer"],
            "type": "pubkey"
          },
          {
            "name": "bump",
            "docs": ["transaction bump"],
            "type": "u8"
          },
          {
            "name": "buffer_index",
            "docs": ["Index to seed address derivation"],
            "type": "u8"
          },
          {
            "name": "final_buffer_hash",
            "docs": ["Hash of the final assembled transaction message."],
            "type": {
              "array": ["u8", 32]
            }
          },
          {
            "name": "final_buffer_size",
            "docs": ["The size of the final assembled transaction message."],
            "type": "u16"
          },
          {
            "name": "creator",
            "docs": [
              "Member of the Multisig who created the TransactionBuffer."
            ],
            "type": {
              "defined": {
                "name": "MemberKey"
              }
            }
          },
          {
            "name": "buffer_extend_hashes",
            "docs": ["Buffer hash for all the buffer extend instruction"],
            "type": {
              "vec": {
                "array": ["u8", 32]
              }
            }
          },
          {
            "name": "voters",
            "docs": ["Members that voted for this transaction"],
            "type": {
              "vec": {
                "defined": {
                  "name": "MemberKey"
                }
              }
            }
          },
          {
            "name": "buffer",
            "docs": ["The buffer of the transaction message."],
            "type": "bytes"
          }
        ]
      }
    },
    {
      "name": "TransactionBufferCreateArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "permissionless_execution",
            "docs": ["Allow execution without sigverify"],
            "type": "bool"
          },
          {
            "name": "buffer_extend_hashes",
            "docs": ["Buffer hashes for the subsequent extend instruction"],
            "type": {
              "vec": {
                "array": ["u8", 32]
              }
            }
          },
          {
            "name": "buffer_index",
            "docs": [
              "Index of the buffer account to seed the account derivation"
            ],
            "type": "u8"
          },
          {
            "name": "final_buffer_hash",
            "docs": ["Hash of the final assembled transaction message."],
            "type": {
              "array": ["u8", 32]
            }
          },
          {
            "name": "final_buffer_size",
            "docs": ["Final size of the buffer."],
            "type": "u16"
          },
          {
            "name": "buffer",
            "docs": ["Initial slice of the buffer."],
            "type": "bytes"
          }
        ]
      }
    },
    {
      "name": "TransactionBufferExtendArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "buffer",
            "type": "bytes"
          }
        ]
      }
    },
    {
      "name": "TransactionMessage",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "num_signers",
            "docs": ["The number of signer pubkeys in the account_keys vec."],
            "type": "u8"
          },
          {
            "name": "num_writable_signers",
            "docs": [
              "The number of writable signer pubkeys in the account_keys vec."
            ],
            "type": "u8"
          },
          {
            "name": "num_writable_non_signers",
            "docs": [
              "The number of writable non-signer pubkeys in the account_keys vec."
            ],
            "type": "u8"
          },
          {
            "name": "num_account_keys",
            "docs": [
              "The number of static account keys in the account_keys vec."
            ],
            "type": "u8"
          },
          {
            "name": "instructions",
            "docs": ["List of instructions making up the tx."],
            "type": {
              "vec": {
                "defined": {
                  "name": "CompiledInstruction"
                }
              }
            }
          },
          {
            "name": "address_table_lookups",
            "docs": [
              "List of address table lookups used to load additional accounts",
              "for this transaction."
            ],
            "type": {
              "vec": {
                "defined": {
                  "name": "TransactionMessageAddressTableLookup"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "TransactionMessageAddressTableLookup",
      "docs": [
        "Address table lookups describe an on-chain address lookup table to use",
        "for loading more readonly and writable accounts in a single tx."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "account_key_index",
            "docs": ["Address lookup table account key"],
            "type": "u8"
          },
          {
            "name": "writable_indexes",
            "docs": ["List of indexes used to load writable account addresses"],
            "type": "bytes"
          },
          {
            "name": "readonly_indexes",
            "docs": ["List of indexes used to load readonly account addresses"],
            "type": "bytes"
          }
        ]
      }
    }
  ]
}
