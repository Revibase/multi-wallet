{
  "address": "reviR1xysEChySVSWGa43a6oJ2boJYTJhwRjo8KJhhT",
  "metadata": {
    "name": "multi_wallet",
    "version": "0.1.0",
    "spec": "0.1.0",
    "description": "Created with Anchor"
  },
  "instructions": [
    {
      "name": "change_config",
      "docs": [
        "Applies one or more configuration changes to an existing multi-wallet."
      ],
      "discriminator": [8],
      "accounts": [
        {
          "name": "settings",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109, 117, 108, 116, 105, 95, 119, 97, 108, 108, 101, 116
                ]
              },
              {
                "kind": "arg",
                "path": "settings_index"
              }
            ]
          }
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "authority",
          "signer": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109, 117, 108, 116, 105, 95, 119, 97, 108, 108, 101, 116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [118, 97, 117, 108, 116]
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "optional": true,
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "settings_index",
          "type": "u128"
        },
        {
          "name": "config_actions",
          "type": {
            "vec": {
              "defined": {
                "name": "ConfigAction"
              }
            }
          }
        },
        {
          "name": "compressed_proof_args",
          "type": {
            "option": {
              "defined": {
                "name": "ProofArgs"
              }
            }
          }
        }
      ]
    },
    {
      "name": "change_config_compressed",
      "docs": [
        "Applies one or more configuration changes to an existing multi-wallet."
      ],
      "discriminator": [19],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "authority",
          "signer": true
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "optional": true,
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "config_actions",
          "type": {
            "vec": {
              "defined": {
                "name": "ConfigAction"
              }
            }
          }
        },
        {
          "name": "settings_mut",
          "type": {
            "defined": {
              "name": "SettingsMutArgs"
            }
          }
        },
        {
          "name": "compressed_proof_args",
          "type": {
            "defined": {
              "name": "ProofArgs"
            }
          }
        }
      ]
    },
    {
      "name": "compress_settings_account",
      "docs": [
        "* Compressed Versions",
        "Compress an existing settings account."
      ],
      "discriminator": [16],
      "accounts": [
        {
          "name": "settings",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "compressed_proof_args",
          "type": {
            "defined": {
              "name": "ProofArgs"
            }
          }
        },
        {
          "name": "settings_arg",
          "type": {
            "defined": {
              "name": "SettingsCreateOrMutateArgs"
            }
          }
        },
        {
          "name": "secp256r1_verify_args",
          "type": {
            "vec": {
              "defined": {
                "name": "Secp256r1VerifyArgsWithDomainAddress"
              }
            }
          }
        }
      ]
    },
    {
      "name": "create_delegates",
      "docs": [
        "Create Delegate Account (for linking a pubkey to a multisig wallet)"
      ],
      "discriminator": [5],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "compressed_proof_args",
          "type": {
            "defined": {
              "name": "ProofArgs"
            }
          }
        },
        {
          "name": "create_delegate_args",
          "type": {
            "vec": {
              "defined": {
                "name": "CreateDelegateArg"
              }
            }
          }
        }
      ]
    },
    {
      "name": "create_domain_config",
      "docs": [
        "Initializes a new domain configuration used for WebAuthn (secp256r1) verification."
      ],
      "discriminator": [0],
      "accounts": [
        {
          "name": "domain_config",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "CreateDomainConfigArgs"
            }
          }
        }
      ]
    },
    {
      "name": "create_domain_delegates",
      "docs": ["Create Domain Delegate Account for WebAuthn"],
      "discriminator": [4],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "domain_config"
        },
        {
          "name": "authority",
          "signer": true
        }
      ],
      "args": [
        {
          "name": "compressed_proof_args",
          "type": {
            "defined": {
              "name": "ProofArgs"
            }
          }
        },
        {
          "name": "create_delegate_args",
          "type": {
            "vec": {
              "defined": {
                "name": "CreateDomainDelegateArg"
              }
            }
          }
        }
      ]
    },
    {
      "name": "create_global_counter",
      "docs": ["Create a global counter to index all multi wallets"],
      "discriminator": [3],
      "accounts": [
        {
          "name": "global_counter",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  103, 108, 111, 98, 97, 108, 95, 99, 111, 117, 110, 116, 101,
                  114
                ]
              }
            ]
          }
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "create_multi_wallet",
      "docs": [
        "Creates a new multi-wallet with the specified permissions and ownership."
      ],
      "discriminator": [7],
      "accounts": [
        {
          "name": "settings",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109, 117, 108, 116, 105, 95, 119, 97, 108, 108, 101, 116
                ]
              },
              {
                "kind": "arg",
                "path": "settings_index"
              }
            ]
          }
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "initial_member",
          "signer": true,
          "optional": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "optional": true,
          "address": "Sysvar1nstructions1111111111111111111111111"
        },
        {
          "name": "domain_config",
          "optional": true
        },
        {
          "name": "global_counter",
          "writable": true
        }
      ],
      "args": [
        {
          "name": "settings_index",
          "type": "u128"
        },
        {
          "name": "secp256r1_verify_args",
          "type": {
            "option": {
              "defined": {
                "name": "Secp256r1VerifyArgs"
              }
            }
          }
        },
        {
          "name": "delegate_mut_args",
          "type": {
            "defined": {
              "name": "DelegateMutArgs"
            }
          }
        },
        {
          "name": "compressed_proof_args",
          "type": {
            "defined": {
              "name": "ProofArgs"
            }
          }
        },
        {
          "name": "set_as_delegate",
          "type": "bool"
        }
      ]
    },
    {
      "name": "create_multi_wallet_compressed",
      "docs": [
        "Creates a new multi-wallet with the specified permissions and ownership."
      ],
      "discriminator": [18],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "initial_member",
          "signer": true,
          "optional": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "optional": true,
          "address": "Sysvar1nstructions1111111111111111111111111"
        },
        {
          "name": "domain_config",
          "optional": true
        },
        {
          "name": "global_counter",
          "writable": true
        }
      ],
      "args": [
        {
          "name": "secp256r1_verify_args",
          "type": {
            "option": {
              "defined": {
                "name": "Secp256r1VerifyArgs"
              }
            }
          }
        },
        {
          "name": "compressed_proof_args",
          "type": {
            "defined": {
              "name": "ProofArgs"
            }
          }
        },
        {
          "name": "settings_creation",
          "type": {
            "defined": {
              "name": "SettingsCreationArgs"
            }
          }
        },
        {
          "name": "delegate_mut_args",
          "type": {
            "defined": {
              "name": "DelegateMutArgs"
            }
          }
        },
        {
          "name": "settings_index",
          "type": "u128"
        },
        {
          "name": "set_as_delegate",
          "type": "bool"
        }
      ]
    },
    {
      "name": "decompress_settings_account",
      "docs": ["Decompress an existing settings account."],
      "discriminator": [17],
      "accounts": [
        {
          "name": "settings",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109, 117, 108, 116, 105, 95, 119, 97, 108, 108, 101, 116
                ]
              },
              {
                "kind": "arg",
                "path": "settings_mut.data.data"
              }
            ]
          }
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "settings_mut",
          "type": {
            "defined": {
              "name": "SettingsMutArgs"
            }
          }
        },
        {
          "name": "compressed_proof_args",
          "type": {
            "defined": {
              "name": "ProofArgs"
            }
          }
        },
        {
          "name": "secp256r1_verify_args",
          "type": {
            "vec": {
              "defined": {
                "name": "Secp256r1VerifyArgsWithDomainAddress"
              }
            }
          }
        }
      ]
    },
    {
      "name": "disable_domain_config",
      "docs": [
        "Enables or disables a domain configuration. Useful for temporary suspension."
      ],
      "discriminator": [2],
      "accounts": [
        {
          "name": "domain_config",
          "writable": true
        },
        {
          "name": "admin",
          "signer": true,
          "address": "AMn21jT5RMZrv5hSvtkrWCMJFp3cUyeAx4AxKvF59xJZ"
        }
      ],
      "args": [
        {
          "name": "disable",
          "type": "bool"
        }
      ]
    },
    {
      "name": "edit_delegate_extension",
      "docs": ["Edit Delegate extension"],
      "discriminator": [6],
      "accounts": [
        {
          "name": "authority",
          "signer": true
        },
        {
          "name": "delegate_extensions",
          "writable": true
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "EditDelegateExtensionsArgs"
            }
          }
        }
      ]
    },
    {
      "name": "edit_domain_config",
      "docs": [
        "Updates an existing domain configuration used for WebAuthn (secp256r1) verification."
      ],
      "discriminator": [1],
      "accounts": [
        {
          "name": "domain_config",
          "writable": true
        },
        {
          "name": "authority",
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "EditDomainConfigArgs"
            }
          }
        }
      ]
    },
    {
      "name": "migrate_compressed_delegates",
      "discriminator": [31],
      "accounts": [
        {
          "name": "authority",
          "writable": true,
          "signer": true,
          "address": "AMn21jT5RMZrv5hSvtkrWCMJFp3cUyeAx4AxKvF59xJZ"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "Delegate"
            }
          }
        },
        {
          "name": "compressed_proof_args",
          "type": {
            "defined": {
              "name": "ProofArgs"
            }
          }
        },
        {
          "name": "delegate_creation_args",
          "type": {
            "defined": {
              "name": "DelegateCreationArgs"
            }
          }
        }
      ]
    },
    {
      "name": "migrate_compressed_settings",
      "discriminator": [32],
      "accounts": [
        {
          "name": "authority",
          "writable": true,
          "signer": true,
          "address": "AMn21jT5RMZrv5hSvtkrWCMJFp3cUyeAx4AxKvF59xJZ"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "CompressedSettingsData"
            }
          }
        },
        {
          "name": "compressed_proof_args",
          "type": {
            "defined": {
              "name": "ProofArgs"
            }
          }
        },
        {
          "name": "settings_creation_args",
          "type": {
            "defined": {
              "name": "SettingsCreationArgs"
            }
          }
        }
      ]
    },
    {
      "name": "migrate_delegate_extension",
      "discriminator": [33],
      "accounts": [
        {
          "name": "authority",
          "writable": true,
          "signer": true,
          "address": "AMn21jT5RMZrv5hSvtkrWCMJFp3cUyeAx4AxKvF59xJZ"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "api_url",
          "type": "string"
        },
        {
          "name": "member",
          "type": "pubkey"
        }
      ]
    },
    {
      "name": "native_transfer_intent",
      "discriminator": [29],
      "accounts": [
        {
          "name": "settings"
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "address": "Sysvar1nstructions1111111111111111111111111"
        },
        {
          "name": "source",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109, 117, 108, 116, 105, 95, 119, 97, 108, 108, 101, 116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [118, 97, 117, 108, 116]
              }
            ]
          }
        },
        {
          "name": "destination",
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        },
        {
          "name": "secp256r1_verify_args",
          "type": {
            "vec": {
              "defined": {
                "name": "Secp256r1VerifyArgsWithDomainAddress"
              }
            }
          }
        }
      ]
    },
    {
      "name": "native_transfer_intent_compressed",
      "discriminator": [27],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "address": "Sysvar1nstructions1111111111111111111111111"
        },
        {
          "name": "source",
          "writable": true
        },
        {
          "name": "destination",
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        },
        {
          "name": "secp256r1_verify_args",
          "type": {
            "vec": {
              "defined": {
                "name": "Secp256r1VerifyArgsWithDomainAddress"
              }
            }
          }
        },
        {
          "name": "settings_readonly",
          "type": {
            "defined": {
              "name": "SettingsReadonlyArgs"
            }
          }
        },
        {
          "name": "compressed_proof_args",
          "type": {
            "defined": {
              "name": "ProofArgs"
            }
          }
        }
      ]
    },
    {
      "name": "token_transfer_intent",
      "discriminator": [30],
      "accounts": [
        {
          "name": "settings"
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "address": "Sysvar1nstructions1111111111111111111111111"
        },
        {
          "name": "source",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109, 117, 108, 116, 105, 95, 119, 97, 108, 108, 101, 116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [118, 97, 117, 108, 116]
              }
            ]
          }
        },
        {
          "name": "source_token_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "source"
              },
              {
                "kind": "account",
                "path": "token_program"
              },
              {
                "kind": "account",
                "path": "mint"
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140, 151, 37, 143, 78, 36, 137, 241, 187, 61, 16, 41, 20, 142,
                13, 131, 11, 90, 19, 153, 218, 255, 16, 132, 4, 142, 123, 216,
                219, 233, 248, 89
              ]
            }
          }
        },
        {
          "name": "destination"
        },
        {
          "name": "destination_token_account",
          "writable": true
        },
        {
          "name": "token_program"
        },
        {
          "name": "mint"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "associated_token_program",
          "address": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        },
        {
          "name": "secp256r1_verify_args",
          "type": {
            "vec": {
              "defined": {
                "name": "Secp256r1VerifyArgsWithDomainAddress"
              }
            }
          }
        }
      ]
    },
    {
      "name": "token_transfer_intent_compressed",
      "discriminator": [28],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "address": "Sysvar1nstructions1111111111111111111111111"
        },
        {
          "name": "source",
          "writable": true
        },
        {
          "name": "source_token_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "source"
              },
              {
                "kind": "account",
                "path": "token_program"
              },
              {
                "kind": "account",
                "path": "mint"
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140, 151, 37, 143, 78, 36, 137, 241, 187, 61, 16, 41, 20, 142,
                13, 131, 11, 90, 19, 153, 218, 255, 16, 132, 4, 142, 123, 216,
                219, 233, 248, 89
              ]
            }
          }
        },
        {
          "name": "destination"
        },
        {
          "name": "destination_token_account",
          "writable": true
        },
        {
          "name": "token_program"
        },
        {
          "name": "mint"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "associated_token_program",
          "address": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        },
        {
          "name": "secp256r1_verify_args",
          "type": {
            "vec": {
              "defined": {
                "name": "Secp256r1VerifyArgsWithDomainAddress"
              }
            }
          }
        },
        {
          "name": "settings_readonly",
          "type": {
            "defined": {
              "name": "SettingsReadonlyArgs"
            }
          }
        },
        {
          "name": "compressed_proof_args",
          "type": {
            "defined": {
              "name": "ProofArgs"
            }
          }
        }
      ]
    },
    {
      "name": "transaction_buffer_close",
      "docs": ["Closes and cleans up a transaction buffer."],
      "discriminator": [12],
      "accounts": [
        {
          "name": "settings"
        },
        {
          "name": "payer",
          "writable": true
        },
        {
          "name": "domain_config",
          "optional": true
        },
        {
          "name": "transaction_buffer",
          "writable": true
        },
        {
          "name": "closer",
          "signer": true,
          "optional": true
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "optional": true,
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "secp256r1_verify_args",
          "type": {
            "option": {
              "defined": {
                "name": "Secp256r1VerifyArgs"
              }
            }
          }
        }
      ]
    },
    {
      "name": "transaction_buffer_close_compressed",
      "docs": ["Closes and cleans up a transaction buffer."],
      "discriminator": [23],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "rent_collector",
          "writable": true
        },
        {
          "name": "domain_config",
          "optional": true
        },
        {
          "name": "transaction_buffer",
          "writable": true
        },
        {
          "name": "closer",
          "signer": true,
          "optional": true
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "optional": true,
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "secp256r1_verify_args",
          "type": {
            "option": {
              "defined": {
                "name": "Secp256r1VerifyArgs"
              }
            }
          }
        },
        {
          "name": "settings_readonly",
          "type": {
            "defined": {
              "name": "SettingsReadonlyArgs"
            }
          }
        },
        {
          "name": "compressed_proof_args",
          "type": {
            "defined": {
              "name": "ProofArgs"
            }
          }
        }
      ]
    },
    {
      "name": "transaction_buffer_create",
      "docs": [
        "Creates a new transaction buffer to stage a transaction before execution."
      ],
      "discriminator": [9],
      "accounts": [
        {
          "name": "settings"
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "domain_config",
          "optional": true
        },
        {
          "name": "transaction_buffer",
          "writable": true
        },
        {
          "name": "creator",
          "signer": true,
          "optional": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "address": "Sysvar1nstructions1111111111111111111111111"
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "TransactionBufferCreateArgs"
            }
          }
        },
        {
          "name": "secp256r1_verify_args",
          "type": {
            "option": {
              "defined": {
                "name": "Secp256r1VerifyArgs"
              }
            }
          }
        }
      ]
    },
    {
      "name": "transaction_buffer_create_compressed",
      "docs": [
        "Creates a new transaction buffer to stage a transaction before execution."
      ],
      "discriminator": [20],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "domain_config",
          "optional": true
        },
        {
          "name": "transaction_buffer",
          "writable": true
        },
        {
          "name": "creator",
          "signer": true,
          "optional": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "address": "Sysvar1nstructions1111111111111111111111111"
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "TransactionBufferCreateArgs"
            }
          }
        },
        {
          "name": "secp256r1_verify_args",
          "type": {
            "option": {
              "defined": {
                "name": "Secp256r1VerifyArgs"
              }
            }
          }
        },
        {
          "name": "settings_readonly",
          "type": {
            "defined": {
              "name": "SettingsReadonlyArgs"
            }
          }
        },
        {
          "name": "compressed_proof_args",
          "type": {
            "defined": {
              "name": "ProofArgs"
            }
          }
        }
      ]
    },
    {
      "name": "transaction_buffer_execute",
      "docs": ["Executes a previously approved transaction buffer."],
      "discriminator": [13],
      "accounts": [
        {
          "name": "settings"
        },
        {
          "name": "domain_config",
          "optional": true
        },
        {
          "name": "executor",
          "signer": true,
          "optional": true
        },
        {
          "name": "transaction_buffer",
          "writable": true
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "optional": true,
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "secp256r1_verify_args",
          "type": {
            "option": {
              "defined": {
                "name": "Secp256r1VerifyArgs"
              }
            }
          }
        }
      ]
    },
    {
      "name": "transaction_buffer_execute_compressed",
      "docs": ["Executes a previously approved transaction buffer."],
      "discriminator": [24],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "domain_config",
          "optional": true
        },
        {
          "name": "executor",
          "signer": true,
          "optional": true
        },
        {
          "name": "transaction_buffer",
          "writable": true
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "optional": true,
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "secp256r1_verify_args",
          "type": {
            "option": {
              "defined": {
                "name": "Secp256r1VerifyArgs"
              }
            }
          }
        },
        {
          "name": "settings_readonly",
          "type": {
            "defined": {
              "name": "SettingsReadonlyArgs"
            }
          }
        },
        {
          "name": "compressed_proof_args",
          "type": {
            "defined": {
              "name": "ProofArgs"
            }
          }
        }
      ]
    },
    {
      "name": "transaction_buffer_extend",
      "docs": [
        "Extends an existing transaction buffer to allow for updated data or additional time."
      ],
      "discriminator": [11],
      "accounts": [
        {
          "name": "settings"
        },
        {
          "name": "transaction_buffer",
          "writable": true
        }
      ],
      "args": [
        {
          "name": "buffer",
          "type": "bytes"
        }
      ]
    },
    {
      "name": "transaction_buffer_extend_compressed",
      "docs": [
        "Extends an existing transaction buffer to allow for updated data or additional time."
      ],
      "discriminator": [22],
      "accounts": [
        {
          "name": "transaction_buffer",
          "writable": true
        }
      ],
      "args": [
        {
          "name": "buffer",
          "type": "bytes"
        },
        {
          "name": "settings_key",
          "type": "pubkey"
        }
      ]
    },
    {
      "name": "transaction_buffer_vote",
      "docs": ["Signs a transaction buffer to register approval."],
      "discriminator": [10],
      "accounts": [
        {
          "name": "settings"
        },
        {
          "name": "domain_config",
          "optional": true
        },
        {
          "name": "transaction_buffer",
          "writable": true
        },
        {
          "name": "voter",
          "signer": true,
          "optional": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "optional": true,
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "secp256r1_verify_args",
          "type": {
            "option": {
              "defined": {
                "name": "Secp256r1VerifyArgs"
              }
            }
          }
        }
      ]
    },
    {
      "name": "transaction_buffer_vote_compressed",
      "docs": ["Signs a transaction buffer to register approval."],
      "discriminator": [21],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "domain_config",
          "optional": true
        },
        {
          "name": "transaction_buffer",
          "writable": true
        },
        {
          "name": "voter",
          "signer": true,
          "optional": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "optional": true,
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "secp256r1_verify_args",
          "type": {
            "option": {
              "defined": {
                "name": "Secp256r1VerifyArgs"
              }
            }
          }
        },
        {
          "name": "settings_readonly",
          "type": {
            "defined": {
              "name": "SettingsReadonlyArgs"
            }
          }
        },
        {
          "name": "compressed_proof_args",
          "type": {
            "defined": {
              "name": "ProofArgs"
            }
          }
        }
      ]
    },
    {
      "name": "transaction_execute",
      "docs": ["Executes a staged transaction from a buffer."],
      "discriminator": [14],
      "accounts": [
        {
          "name": "settings",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true
        },
        {
          "name": "transaction_buffer",
          "writable": true
        }
      ],
      "args": []
    },
    {
      "name": "transaction_execute_compressed",
      "docs": ["Executes a staged transaction from a buffer."],
      "discriminator": [25],
      "accounts": [
        {
          "name": "payer",
          "writable": true
        },
        {
          "name": "transaction_buffer",
          "writable": true
        }
      ],
      "args": [
        {
          "name": "settings_key",
          "type": "pubkey"
        }
      ]
    },
    {
      "name": "transaction_execute_sync",
      "docs": [
        "Executes a transaction synchronously by directly submitting the message and verifying it."
      ],
      "discriminator": [15],
      "accounts": [
        {
          "name": "settings",
          "writable": true
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "transaction_message",
          "type": {
            "defined": {
              "name": "TransactionMessage"
            }
          }
        },
        {
          "name": "secp256r1_verify_args",
          "type": {
            "vec": {
              "defined": {
                "name": "Secp256r1VerifyArgsWithDomainAddress"
              }
            }
          }
        }
      ]
    },
    {
      "name": "transaction_execute_sync_compressed",
      "docs": [
        "Executes a transaction synchronously by directly submitting the message and verifying it."
      ],
      "discriminator": [26],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "slot_hash_sysvar",
          "optional": true,
          "address": "SysvarS1otHashes111111111111111111111111111"
        },
        {
          "name": "instructions_sysvar",
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "transaction_message",
          "type": {
            "defined": {
              "name": "TransactionMessage"
            }
          }
        },
        {
          "name": "secp256r1_verify_args",
          "type": {
            "vec": {
              "defined": {
                "name": "Secp256r1VerifyArgsWithDomainAddress"
              }
            }
          }
        },
        {
          "name": "settings_readonly",
          "type": {
            "defined": {
              "name": "SettingsReadonlyArgs"
            }
          }
        },
        {
          "name": "compressed_proof_args",
          "type": {
            "defined": {
              "name": "ProofArgs"
            }
          }
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "DelegateExtensions",
      "discriminator": [216, 97, 236, 77, 232, 40, 207, 158]
    },
    {
      "name": "DomainConfig",
      "discriminator": [201, 232, 212, 229, 59, 241, 106, 197]
    },
    {
      "name": "GlobalCounter",
      "discriminator": [42, 206, 176, 58, 175, 129, 130, 233]
    },
    {
      "name": "Settings",
      "discriminator": [223, 179, 163, 190, 177, 224, 67, 173]
    },
    {
      "name": "TransactionBuffer",
      "discriminator": [90, 36, 35, 219, 93, 225, 110, 96]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "InvalidSignedMessage",
      "msg": "The provided signature doesn't match the expected message. Make sure you're signing the correct payload."
    },
    {
      "code": 6001,
      "name": "InvalidSecp256r1VerifyArg",
      "msg": "Missing or incorrectly formatted WebAuthn verification arguments. Please check the secp256r1 signature input."
    },
    {
      "code": 6002,
      "name": "DurableNonceDetected",
      "msg": "This transaction includes a durable nonce, which is not supported by this program."
    },
    {
      "code": 6003,
      "name": "DuplicateMember",
      "msg": "Duplicate public keys detected in the member list. Each member must have a unique key."
    },
    {
      "code": 6004,
      "name": "PermanentMember",
      "msg": "Permanent members cannot be removed from the wallet."
    },
    {
      "code": 6005,
      "name": "PermanentMemberNotAllowed",
      "msg": "Unable to set permanent member for this operation."
    },
    {
      "code": 6006,
      "name": "OnlyOnePermanentMemberAllowed",
      "msg": "Only one permanent member can exist per wallet."
    },
    {
      "code": 6007,
      "name": "OnlyOneTransactionManagerAllowed",
      "msg": "Only one transaction manager can exist per wallet."
    },
    {
      "code": 6008,
      "name": "TransactionManagerNotAllowed",
      "msg": "Unable to set transaction manager for this operation."
    },
    {
      "code": 6009,
      "name": "EmptyMembers",
      "msg": "No members were provided. A multisig must have at least one member."
    },
    {
      "code": 6010,
      "name": "TooManyMembers",
      "msg": "The number of members exceeds the supported maximum 4."
    },
    {
      "code": 6011,
      "name": "InvalidThreshold",
      "msg": "Invalid threshold value. It must be at least 1 and not exceed the number of voting-eligible members."
    },
    {
      "code": 6012,
      "name": "InvalidTransactionMessage",
      "msg": "The transaction message structure is malformed or does not follow expected formatting."
    },
    {
      "code": 6013,
      "name": "InvalidNumberOfAccounts",
      "msg": "The number of provided accounts does not match what was expected for this instruction."
    },
    {
      "code": 6014,
      "name": "InvalidAccount",
      "msg": "One or more accounts provided failed validation. Ensure all required accounts are included and correct."
    },
    {
      "code": 6015,
      "name": "InvalidArguments",
      "msg": "One or more arguments provided failed validation. Ensure all required arguments are included and correct."
    },
    {
      "code": 6016,
      "name": "MissingAccount",
      "msg": "A required account is missing from the transaction context."
    },
    {
      "code": 6017,
      "name": "MissingDelegateArgs",
      "msg": "A delegate mutation args is required when the initial member has requested delegate permissions."
    },
    {
      "code": 6018,
      "name": "AlreadyDelegated",
      "msg": "A member is currently delegated to another wallet."
    },
    {
      "code": 6019,
      "name": "InsufficientSignerWithExecutePermission",
      "msg": "At least one signer must have execute permissions to proceed."
    },
    {
      "code": 6020,
      "name": "InsufficientSignerWithInitiatePermission",
      "msg": "At least one signer must have initiate permissions to perform this action."
    },
    {
      "code": 6021,
      "name": "InsufficientSignersWithVotePermission",
      "msg": "The approval threshold cannot be met because there aren't enough voters with the vote permission."
    },
    {
      "code": 6022,
      "name": "NoSignerFound",
      "msg": "No valid signer was found in this transaction."
    },
    {
      "code": 6023,
      "name": "UnauthorisedToCloseTransactionBuffer",
      "msg": "Only the transaction's creator or rent payer is allowed to close the transaction buffer."
    },
    {
      "code": 6024,
      "name": "InvalidBuffer",
      "msg": "The contents of the buffer do not match the expected hash. It may have been tampered with."
    },
    {
      "code": 6025,
      "name": "FinalBufferHashMismatch",
      "msg": "The final hash of the buffer doesn't match what was expected. The buffer might be corrupted or altered."
    },
    {
      "code": 6026,
      "name": "FinalBufferSizeExceeded",
      "msg": "The serialized transaction buffer exceeds the maximum allowed size of 10,128 bytes."
    },
    {
      "code": 6027,
      "name": "FinalBufferSizeMismatch",
      "msg": "The declared size of the buffer does not match its actual size."
    },
    {
      "code": 6028,
      "name": "TransactionHasExpired",
      "msg": "The transaction has expired. It must be executed within 3 minutes of approval."
    },
    {
      "code": 6029,
      "name": "TransactionNotApproved",
      "msg": "The transaction hasn't received enough approvals yet to be executed."
    },
    {
      "code": 6030,
      "name": "ProtectedAccount",
      "msg": "Writable CPI calls to protected accounts are not permitted."
    },
    {
      "code": 6031,
      "name": "MaxLengthExceeded",
      "msg": "One of the input strings exceeds the maximum allowed character limit."
    },
    {
      "code": 6032,
      "name": "MissingSysvarSlotHistory",
      "msg": "The Slot History sysvar account is missing. It must be included as an account in this instruction."
    },
    {
      "code": 6033,
      "name": "InvalidSysvarDataFormat",
      "msg": "Failed to parse sysvar: slot history format is invalid or corrupted."
    },
    {
      "code": 6034,
      "name": "SlotNumberNotFound",
      "msg": "The specified slot number is not present in the provided slot history."
    },
    {
      "code": 6035,
      "name": "DomainConfigIsDisabled",
      "msg": "The domain configuration account is currently disabled. Contact support or try again later."
    },
    {
      "code": 6036,
      "name": "DomainConfigIsMissing",
      "msg": "Missing domain configuration account. Ensure it's passed in the instruction."
    },
    {
      "code": 6037,
      "name": "MemberDoesNotBelongToDomainConfig",
      "msg": "This member is not registered in the provided domain configuration."
    },
    {
      "code": 6038,
      "name": "RpIdHashMismatch",
      "msg": "The relying party ID hash does not match the one specified in the domain configuration."
    },
    {
      "code": 6039,
      "name": "InvalidJson",
      "msg": "Failed to parse the client data JSON. The format may be invalid."
    },
    {
      "code": 6040,
      "name": "MissingOrigin",
      "msg": "Missing origin field in clientDataJSON. This field is required for WebAuthn validation."
    },
    {
      "code": 6041,
      "name": "InvalidOrigin",
      "msg": "The origin value in clientDataJSON does not match the expected domain."
    },
    {
      "code": 6042,
      "name": "MissingType",
      "msg": "Missing type field in clientDataJSON. This field is required for WebAuthn validation."
    },
    {
      "code": 6043,
      "name": "InvalidType",
      "msg": "The type field in clientDataJSON is invalid. Expected value: webauthn.get."
    },
    {
      "code": 6044,
      "name": "MissingChallenge",
      "msg": "Missing challenge field in clientDataJSON. This is required for validating the authentication request."
    },
    {
      "code": 6045,
      "name": "InvalidChallenge",
      "msg": "The challenge value in clientDataJSON is missing or doesn't match the expected challenge."
    }
  ],
  "types": [
    {
      "name": "CompiledInstruction",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "program_id_index",
            "type": "u8"
          },
          {
            "name": "account_indexes",
            "type": "bytes"
          },
          {
            "name": "data",
            "type": "bytes"
          }
        ]
      }
    },
    {
      "name": "CompressedAccountMeta",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "tree_info",
            "docs": ["Merkle tree context."],
            "type": {
              "defined": {
                "name": "PackedStateTreeInfo"
              }
            }
          },
          {
            "name": "address",
            "docs": ["Address."],
            "type": {
              "array": ["u8", 32]
            }
          },
          {
            "name": "output_state_tree_index",
            "docs": ["Output merkle tree index."],
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "CompressedProof",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "a",
            "type": {
              "array": ["u8", 32]
            }
          },
          {
            "name": "b",
            "type": {
              "array": ["u8", 64]
            }
          },
          {
            "name": "c",
            "type": {
              "array": ["u8", 32]
            }
          }
        ]
      }
    },
    {
      "name": "CompressedSettings",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "data",
            "type": {
              "option": {
                "defined": {
                  "name": "CompressedSettingsData"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "CompressedSettingsData",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "threshold",
            "type": "u8"
          },
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "index",
            "type": "u128"
          },
          {
            "name": "multi_wallet_bump",
            "type": "u8"
          },
          {
            "name": "members",
            "type": {
              "vec": {
                "defined": {
                  "name": "Member"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "ConfigAction",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "EditPermissions",
            "fields": [
              {
                "vec": {
                  "defined": {
                    "name": "MemberKeyWithEditPermissionsArgs"
                  }
                }
              }
            ]
          },
          {
            "name": "AddMembers",
            "fields": [
              {
                "vec": {
                  "defined": {
                    "name": "MemberWithAddPermissionsArgs"
                  }
                }
              }
            ]
          },
          {
            "name": "RemoveMembers",
            "fields": [
              {
                "vec": {
                  "defined": {
                    "name": "MemberKeyWithRemovePermissionsArgs"
                  }
                }
              }
            ]
          },
          {
            "name": "SetThreshold",
            "fields": ["u8"]
          }
        ]
      }
    },
    {
      "name": "CreateDelegateArg",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "member",
            "type": "pubkey"
          },
          {
            "name": "is_permanent_member",
            "type": "bool"
          },
          {
            "name": "delegate_creation_args",
            "type": {
              "defined": {
                "name": "DelegateCreationArgs"
              }
            }
          },
          {
            "name": "api_url",
            "type": {
              "option": "string"
            }
          }
        ]
      }
    },
    {
      "name": "CreateDomainConfigArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "rp_id",
            "type": "string"
          },
          {
            "name": "origins",
            "type": {
              "vec": "string"
            }
          },
          {
            "name": "authority",
            "type": "pubkey"
          },
          {
            "name": "metadata_url",
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "CreateDomainDelegateArg",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "member",
            "type": {
              "defined": {
                "name": "Secp256r1Pubkey"
              }
            }
          },
          {
            "name": "is_permanent_member",
            "type": "bool"
          },
          {
            "name": "delegate_creation_args",
            "type": {
              "defined": {
                "name": "DelegateCreationArgs"
              }
            }
          },
          {
            "name": "link_wallet_args",
            "type": {
              "option": {
                "defined": {
                  "name": "LinkWalletArgs"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "Delegate",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "member",
            "type": {
              "defined": {
                "name": "MemberKey"
              }
            }
          },
          {
            "name": "domain_config",
            "type": {
              "option": "pubkey"
            }
          },
          {
            "name": "is_permanent_member",
            "type": "bool"
          },
          {
            "name": "settings_index",
            "type": {
              "option": "u128"
            }
          }
        ]
      }
    },
    {
      "name": "DelegateCreationArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "address_tree_info",
            "type": {
              "defined": {
                "name": "PackedAddressTreeInfo"
              }
            }
          },
          {
            "name": "output_state_tree_index",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "DelegateExtensions",
      "serialization": "bytemuck",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "authority",
            "type": "pubkey"
          },
          {
            "name": "api_url_len",
            "type": "u16"
          },
          {
            "name": "api_url",
            "type": {
              "array": ["u8", 512]
            }
          },
          {
            "name": "_reserved",
            "type": {
              "array": ["u8", 512]
            }
          }
        ]
      }
    },
    {
      "name": "DelegateMutArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "account_meta",
            "type": {
              "defined": {
                "name": "CompressedAccountMeta"
              }
            }
          },
          {
            "name": "data",
            "type": {
              "defined": {
                "name": "Delegate"
              }
            }
          }
        ]
      }
    },
    {
      "name": "DelegateOp",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Add"
          },
          {
            "name": "Remove"
          },
          {
            "name": "Ignore"
          }
        ]
      }
    },
    {
      "name": "DomainConfig",
      "serialization": "bytemuck",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "num_origins",
            "type": "u16"
          },
          {
            "name": "authority",
            "type": "pubkey"
          },
          {
            "name": "rp_id_hash",
            "type": {
              "array": ["u8", 32]
            }
          },
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "is_disabled",
            "type": "u8"
          },
          {
            "name": "rp_id_length",
            "type": "u8"
          },
          {
            "name": "rp_id",
            "type": {
              "array": ["u8", 255]
            }
          },
          {
            "name": "origins",
            "type": {
              "array": ["u8", 413]
            }
          },
          {
            "name": "metadata_url_length",
            "type": "u8"
          },
          {
            "name": "metadata_url",
            "type": {
              "array": ["u8", 100]
            }
          }
        ]
      }
    },
    {
      "name": "EditDelegateExtensionsArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "api_url",
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "EditDomainConfigArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "new_origins",
            "type": {
              "option": {
                "vec": "string"
              }
            }
          },
          {
            "name": "new_authority",
            "type": {
              "option": "pubkey"
            }
          },
          {
            "name": "new_metadata_url",
            "type": {
              "option": "string"
            }
          }
        ]
      }
    },
    {
      "name": "GlobalCounter",
      "serialization": "bytemuck",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "index",
            "type": "u128"
          }
        ]
      }
    },
    {
      "name": "LinkWalletArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "settings_mut_args",
            "type": {
              "defined": {
                "name": "SettingsMutArgs"
              }
            }
          },
          {
            "name": "delegate_extension_authority",
            "type": {
              "option": "pubkey"
            }
          }
        ]
      }
    },
    {
      "name": "Member",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "pubkey",
            "type": {
              "defined": {
                "name": "MemberKey"
              }
            }
          },
          {
            "name": "permissions",
            "type": {
              "defined": {
                "name": "Permissions"
              }
            }
          }
        ]
      }
    },
    {
      "name": "MemberKey",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "key_type",
            "type": "u8"
          },
          {
            "name": "key",
            "type": {
              "array": ["u8", 33]
            }
          }
        ]
      }
    },
    {
      "name": "MemberKeyWithEditPermissionsArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "member_key",
            "type": {
              "defined": {
                "name": "MemberKey"
              }
            }
          },
          {
            "name": "permissions",
            "type": {
              "defined": {
                "name": "Permissions"
              }
            }
          },
          {
            "name": "delegate_args",
            "type": {
              "option": {
                "defined": {
                  "name": "DelegateMutArgs"
                }
              }
            }
          },
          {
            "name": "delegate_operation",
            "type": {
              "defined": {
                "name": "DelegateOp"
              }
            }
          }
        ]
      }
    },
    {
      "name": "MemberKeyWithRemovePermissionsArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "member_key",
            "type": {
              "defined": {
                "name": "MemberKey"
              }
            }
          },
          {
            "name": "delegate_args",
            "type": {
              "defined": {
                "name": "DelegateMutArgs"
              }
            }
          }
        ]
      }
    },
    {
      "name": "MemberWithAddPermissionsArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "member",
            "type": {
              "defined": {
                "name": "Member"
              }
            }
          },
          {
            "name": "verify_args",
            "type": {
              "option": {
                "defined": {
                  "name": "Secp256r1VerifyArgs"
                }
              }
            }
          },
          {
            "name": "delegate_args",
            "type": {
              "defined": {
                "name": "DelegateMutArgs"
              }
            }
          },
          {
            "name": "set_as_delegate",
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "PackedAddressTreeInfo",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "address_merkle_tree_pubkey_index",
            "type": "u8"
          },
          {
            "name": "address_queue_pubkey_index",
            "type": "u8"
          },
          {
            "name": "root_index",
            "type": "u16"
          }
        ]
      }
    },
    {
      "name": "PackedStateTreeInfo",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "root_index",
            "type": "u16"
          },
          {
            "name": "prove_by_index",
            "type": "bool"
          },
          {
            "name": "merkle_tree_pubkey_index",
            "type": "u8"
          },
          {
            "name": "queue_pubkey_index",
            "type": "u8"
          },
          {
            "name": "leaf_index",
            "type": "u32"
          }
        ]
      }
    },
    {
      "name": "Permissions",
      "docs": ["Bitmask for permissions."],
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "mask",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "ProofArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "proof",
            "type": {
              "defined": {
                "name": "ValidityProof"
              }
            }
          },
          {
            "name": "light_cpi_accounts_start_index",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "Secp256r1Pubkey",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "array": ["u8", 33]
          }
        ]
      }
    },
    {
      "name": "Secp256r1VerifyArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "index",
            "type": "u8"
          },
          {
            "name": "slot_number",
            "type": "u64"
          },
          {
            "name": "client_data_json",
            "type": "bytes"
          }
        ]
      }
    },
    {
      "name": "Secp256r1VerifyArgsWithDomainAddress",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "domain_config_key",
            "type": "pubkey"
          },
          {
            "name": "verify_args",
            "type": {
              "defined": {
                "name": "Secp256r1VerifyArgs"
              }
            }
          }
        ]
      }
    },
    {
      "name": "Settings",
      "serialization": "bytemuck",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "index",
            "type": "u128"
          },
          {
            "name": "members",
            "type": {
              "array": [
                {
                  "defined": {
                    "name": "Member"
                  }
                },
                4
              ]
            }
          },
          {
            "name": "members_len",
            "type": "u8"
          },
          {
            "name": "threshold",
            "type": "u8"
          },
          {
            "name": "multi_wallet_bump",
            "type": "u8"
          },
          {
            "name": "bump",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "SettingsCreateOrMutateArgs",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Create",
            "fields": [
              {
                "defined": {
                  "name": "SettingsCreationArgs"
                }
              }
            ]
          },
          {
            "name": "Mutate",
            "fields": [
              {
                "defined": {
                  "name": "SettingsMutArgs"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "SettingsCreationArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "address_tree_info",
            "type": {
              "defined": {
                "name": "PackedAddressTreeInfo"
              }
            }
          },
          {
            "name": "output_state_tree_index",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "SettingsMutArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "account_meta",
            "type": {
              "defined": {
                "name": "CompressedAccountMeta"
              }
            }
          },
          {
            "name": "data",
            "type": {
              "defined": {
                "name": "CompressedSettings"
              }
            }
          }
        ]
      }
    },
    {
      "name": "SettingsReadonlyArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "account_meta",
            "type": {
              "defined": {
                "name": "CompressedAccountMeta"
              }
            }
          },
          {
            "name": "data",
            "type": {
              "defined": {
                "name": "CompressedSettings"
              }
            }
          }
        ]
      }
    },
    {
      "name": "TransactionBuffer",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "multi_wallet_settings",
            "docs": ["The multisig settings this belongs to."],
            "type": "pubkey"
          },
          {
            "name": "multi_wallet_bump",
            "docs": ["The bump for the multi_wallet"],
            "type": "u8"
          },
          {
            "name": "can_execute",
            "docs": ["Flag to allow transaction to be executed"],
            "type": "bool"
          },
          {
            "name": "permissionless_execution",
            "docs": [
              "Flag to allow execution straight away once sufficient threshold is met"
            ],
            "type": "bool"
          },
          {
            "name": "valid_till",
            "type": "u64"
          },
          {
            "name": "payer",
            "docs": ["Payer for the transaction buffer"],
            "type": "pubkey"
          },
          {
            "name": "bump",
            "docs": ["transaction bump"],
            "type": "u8"
          },
          {
            "name": "buffer_index",
            "docs": ["Index to seed address derivation"],
            "type": "u8"
          },
          {
            "name": "final_buffer_hash",
            "docs": ["Hash of the final assembled transaction message."],
            "type": {
              "array": ["u8", 32]
            }
          },
          {
            "name": "final_buffer_size",
            "docs": ["The size of the final assembled transaction message."],
            "type": "u16"
          },
          {
            "name": "creator",
            "docs": [
              "Member of the Multisig who created the TransactionBuffer."
            ],
            "type": {
              "defined": {
                "name": "MemberKey"
              }
            }
          },
          {
            "name": "buffer_extend_hashes",
            "docs": ["Buffer hash for all the buffer extend instruction"],
            "type": {
              "vec": {
                "array": ["u8", 32]
              }
            }
          },
          {
            "name": "voters",
            "docs": ["Members that voted for this transaction"],
            "type": {
              "vec": {
                "defined": {
                  "name": "MemberKey"
                }
              }
            }
          },
          {
            "name": "buffer",
            "docs": ["The buffer of the transaction message."],
            "type": "bytes"
          }
        ]
      }
    },
    {
      "name": "TransactionBufferCreateArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "buffer_index",
            "type": "u8"
          },
          {
            "name": "permissionless_execution",
            "type": "bool"
          },
          {
            "name": "buffer_extend_hashes",
            "type": {
              "vec": {
                "array": ["u8", 32]
              }
            }
          },
          {
            "name": "final_buffer_hash",
            "type": {
              "array": ["u8", 32]
            }
          },
          {
            "name": "final_buffer_size",
            "type": "u16"
          }
        ]
      }
    },
    {
      "name": "TransactionMessage",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "num_signers",
            "type": "u8"
          },
          {
            "name": "num_writable_signers",
            "type": "u8"
          },
          {
            "name": "num_writable_non_signers",
            "type": "u8"
          },
          {
            "name": "num_account_keys",
            "type": "u8"
          },
          {
            "name": "instructions",
            "type": {
              "vec": {
                "defined": {
                  "name": "CompiledInstruction"
                }
              }
            }
          },
          {
            "name": "address_table_lookups",
            "type": {
              "vec": {
                "defined": {
                  "name": "TransactionMessageAddressTableLookup"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "TransactionMessageAddressTableLookup",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "account_key_index",
            "type": "u8"
          },
          {
            "name": "writable_indexes",
            "type": "bytes"
          },
          {
            "name": "readonly_indexes",
            "type": "bytes"
          }
        ]
      }
    },
    {
      "name": "ValidityProof",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "option": {
              "defined": {
                "name": "CompressedProof"
              }
            }
          }
        ]
      }
    }
  ]
}
